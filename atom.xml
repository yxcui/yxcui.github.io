<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yxcui&#39;s Little Stack</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yxcui.github.io/"/>
  <updated>2017-11-13T13:10:24.332Z</updated>
  <id>http://yxcui.github.io/</id>
  
  <author>
    <name>yxcui</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yxcui.github.io/2017/11/03/Space-Time-Cube/"/>
    <id>http://yxcui.github.io/2017/11/03/Space-Time-Cube/</id>
    <published>2017-11-03T01:27:37.566Z</published>
    <updated>2017-11-13T13:10:24.332Z</updated>
    
    <content type="html"><![CDATA[<!DOCTYPE html><html><head><meta charset="utf-8"><meta name="author" content="yxcui">
<meta name="date" content="2017-11-03 09:26:20">
<meta name="tags" content="GIS"><style>body {
  max-width: 980px;
  border: 1px solid #ddd;
  outline: 1300px solid #fff;
  margin: 16px auto;
}

body .markdown-body
{
  padding: 45px;
}

@font-face {
  font-family: fontawesome-mini;
  src: url(data:font/woff;charset=utf-8;base64,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) format('woff');
}

@font-face {
  font-family: octicons-anchor;
  src: url(data:font/woff;charset=utf-8;base64,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) format('woff');
}

.markdown-body {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  color: #333333;
  overflow: hidden;
  font-family: "Helvetica Neue", Helvetica, "Segoe UI", Arial, freesans, sans-serif;
  font-size: 16px;
  line-height: 1.6;
  word-wrap: break-word;
}

.markdown-body a {
  background: transparent;
}

.markdown-body a:active,
.markdown-body a:hover {
  outline: 0;
}

.markdown-body b,
.markdown-body strong {
  font-weight: bold;
}

.markdown-body mark {
  background: #ff0;
  color: #000;
  font-style: italic;
  font-weight: bold;
}

.markdown-body sub,
.markdown-body sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
.markdown-body sup {
  top: -0.5em;
}
.markdown-body sub {
  bottom: -0.25em;
}

.markdown-body h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

.markdown-body img {
  border: 0;
}

.markdown-body hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

.markdown-body pre {
  overflow: auto;
}

.markdown-body code,
.markdown-body kbd,
.markdown-body pre,
.markdown-body samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

.markdown-body input {
  color: inherit;
  font: inherit;
  margin: 0;
}

.markdown-body html input[disabled] {
  cursor: default;
}

.markdown-body input {
  line-height: normal;
}

.markdown-body input[type="checkbox"] {
  box-sizing: border-box;
  padding: 0;
}

.markdown-body table {
  border-collapse: collapse;
  border-spacing: 0;
}

.markdown-body td,
.markdown-body th {
  padding: 0;
}

.markdown-body .codehilitetable {
  border: 0;
  border-spacing: 0;
}

.markdown-body .codehilitetable tr {
  border: 0;
}

.markdown-body .codehilitetable pre,
.markdown-body .codehilitetable div.codehilite {
  margin: 0;
}

.markdown-body .linenos,
.markdown-body .code,
.markdown-body .codehilitetable td {
  border: 0;
  padding: 0;
}

.markdown-body td:not(.linenos) .linenodiv {
  padding: 0 !important;
}

.markdown-body .code {
  width: 100%;
}

.markdown-body .linenos div pre,
.markdown-body .linenodiv pre,
.markdown-body .linenodiv {
  border: 0;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  -webkit-border-top-left-radius: 3px;
  -webkit-border-bottom-left-radius: 3px;
  -moz-border-radius-topleft: 3px;
  -moz-border-radius-bottomleft: 3px;
  border-top-left-radius: 3px;
  border-bottom-left-radius: 3px;
}

.markdown-body .code div pre,
.markdown-body .code div {
  border: 0;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  -webkit-border-top-right-radius: 3px;
  -webkit-border-bottom-right-radius: 3px;
  -moz-border-radius-topright: 3px;
  -moz-border-radius-bottomright: 3px;
  border-top-right-radius: 3px;
  border-bottom-right-radius: 3px;
}

.markdown-body * {
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

.markdown-body input {
  font: 13px Helvetica, arial, freesans, clean, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol";
  line-height: 1.4;
}

.markdown-body a {
  color: #4183c4;
  text-decoration: none;
}

.markdown-body a:hover,
.markdown-body a:focus,
.markdown-body a:active {
  text-decoration: underline;
}

.markdown-body hr {
  height: 0;
  margin: 15px 0;
  overflow: hidden;
  background: transparent;
  border: 0;
  border-bottom: 1px solid #ddd;
}

.markdown-body hr:before,
.markdown-body hr:after {
  display: table;
  content: " ";
}

.markdown-body hr:after {
  clear: both;
}

.markdown-body h1,
.markdown-body h2,
.markdown-body h3,
.markdown-body h4,
.markdown-body h5,
.markdown-body h6 {
  margin-top: 15px;
  margin-bottom: 15px;
  line-height: 1.1;
}

.markdown-body h1 {
  font-size: 30px;
}

.markdown-body h2 {
  font-size: 21px;
}

.markdown-body h3 {
  font-size: 16px;
}

.markdown-body h4 {
  font-size: 14px;
}

.markdown-body h5 {
  font-size: 12px;
}

.markdown-body h6 {
  font-size: 11px;
}

.markdown-body blockquote {
  margin: 0;
}

.markdown-body ul,
.markdown-body ol {
  padding: 0;
  margin-top: 0;
  margin-bottom: 0;
}

.markdown-body ol ol,
.markdown-body ul ol {
  list-style-type: lower-roman;
}

.markdown-body ul ul ol,
.markdown-body ul ol ol,
.markdown-body ol ul ol,
.markdown-body ol ol ol {
  list-style-type: lower-alpha;
}

.markdown-body dd {
  margin-left: 0;
}

.markdown-body code,
.markdown-body pre,
.markdown-body samp {
  font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;
  font-size: 12px;
}

.markdown-body pre {
  margin-top: 0;
  margin-bottom: 0;
}

.markdown-body kbd {
  background-color: #e7e7e7;
  background-image: -moz-linear-gradient(#fefefe, #e7e7e7);
  background-image: -webkit-linear-gradient(#fefefe, #e7e7e7);
  background-image: linear-gradient(#fefefe, #e7e7e7);
  background-repeat: repeat-x;
  border-radius: 2px;
  border: 1px solid #cfcfcf;
  color: #000;
  padding: 3px 5px;
  line-height: 10px;
  font: 11px Consolas, "Liberation Mono", Menlo, Courier, monospace;
  display: inline-block;
}

.markdown-body>*:first-child {
  margin-top: 0 !important;
}

.markdown-body>*:last-child {
  margin-bottom: 0 !important;
}

.markdown-body .headeranchor-link {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  display: block;
  padding-right: 6px;
  padding-left: 30px;
  margin-left: -30px;
}

.markdown-body .headeranchor-link:focus {
  outline: none;
}

.markdown-body h1,
.markdown-body h2,
.markdown-body h3,
.markdown-body h4,
.markdown-body h5,
.markdown-body h6 {
  position: relative;
  margin-top: 1em;
  margin-bottom: 16px;
  font-weight: bold;
  line-height: 1.4;
}

.markdown-body h1 .headeranchor,
.markdown-body h2 .headeranchor,
.markdown-body h3 .headeranchor,
.markdown-body h4 .headeranchor,
.markdown-body h5 .headeranchor,
.markdown-body h6 .headeranchor {
  display: none;
  color: #000;
  vertical-align: middle;
}

.markdown-body h1:hover .headeranchor-link,
.markdown-body h2:hover .headeranchor-link,
.markdown-body h3:hover .headeranchor-link,
.markdown-body h4:hover .headeranchor-link,
.markdown-body h5:hover .headeranchor-link,
.markdown-body h6:hover .headeranchor-link {
  height: 1em;
  padding-left: 8px;
  margin-left: -30px;
  line-height: 1;
  text-decoration: none;
}

.markdown-body h1:hover .headeranchor-link .headeranchor,
.markdown-body h2:hover .headeranchor-link .headeranchor,
.markdown-body h3:hover .headeranchor-link .headeranchor,
.markdown-body h4:hover .headeranchor-link .headeranchor,
.markdown-body h5:hover .headeranchor-link .headeranchor,
.markdown-body h6:hover .headeranchor-link .headeranchor {
  display: inline-block;
}

.markdown-body h1 {
  padding-bottom: 0.3em;
  font-size: 2.25em;
  line-height: 1.2;
  border-bottom: 1px solid #eee;
}

.markdown-body h2 {
  padding-bottom: 0.3em;
  font-size: 1.75em;
  line-height: 1.225;
  border-bottom: 1px solid #eee;
}

.markdown-body h3 {
  font-size: 1.5em;
  line-height: 1.43;
}

.markdown-body h4 {
  font-size: 1.25em;
}

.markdown-body h5 {
  font-size: 1em;
}

.markdown-body h6 {
  font-size: 1em;
  color: #777;
}

.markdown-body p,
.markdown-body blockquote,
.markdown-body ul,
.markdown-body ol,
.markdown-body dl,
.markdown-body table,
.markdown-body pre,
.markdown-body .admonition {
  margin-top: 0;
  margin-bottom: 16px;
}

.markdown-body hr {
  height: 4px;
  padding: 0;
  margin: 16px 0;
  background-color: #e7e7e7;
  border: 0 none;
}

.markdown-body ul,
.markdown-body ol {
  padding-left: 2em;
}

.markdown-body ul ul,
.markdown-body ul ol,
.markdown-body ol ol,
.markdown-body ol ul {
  margin-top: 0;
  margin-bottom: 0;
}

.markdown-body li>p {
  margin-top: 16px;
}

.markdown-body dl {
  padding: 0;
}

.markdown-body dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: bold;
}

.markdown-body dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.markdown-body blockquote {
  padding: 0 15px;
  color: #777;
  border-left: 4px solid #ddd;
}

.markdown-body blockquote>:first-child {
  margin-top: 0;
}

.markdown-body blockquote>:last-child {
  margin-bottom: 0;
}

.markdown-body table {
  display: block;
  width: 100%;
  overflow: auto;
  word-break: normal;
  word-break: keep-all;
}

.markdown-body table th {
  font-weight: bold;
}

.markdown-body table th,
.markdown-body table td {
  padding: 6px 13px;
  border: 1px solid #ddd;
}

.markdown-body table tr {
  background-color: #fff;
  border-top: 1px solid #ccc;
}

.markdown-body table tr:nth-child(2n) {
  background-color: #f8f8f8;
}

.markdown-body img {
  max-width: 100%;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

.markdown-body code,
.markdown-body samp {
  padding: 0;
  padding-top: 0.2em;
  padding-bottom: 0.2em;
  margin: 0;
  font-size: 85%;
  background-color: rgba(0,0,0,0.04);
  border-radius: 3px;
}

.markdown-body code:before,
.markdown-body code:after {
  letter-spacing: -0.2em;
  content: "\00a0";
}

.markdown-body pre>code {
  padding: 0;
  margin: 0;
  font-size: 100%;
  word-break: normal;
  white-space: pre;
  background: transparent;
  border: 0;
}

.markdown-body .codehilite {
  margin-bottom: 16px;
}

.markdown-body .codehilite pre,
.markdown-body pre {
  padding: 16px;
  overflow: auto;
  font-size: 85%;
  line-height: 1.45;
  background-color: #f7f7f7;
  border-radius: 3px;
}

.markdown-body .codehilite pre {
  margin-bottom: 0;
  word-break: normal;
}

.markdown-body pre {
  word-wrap: normal;
}

.markdown-body pre code {
  display: inline;
  max-width: initial;
  padding: 0;
  margin: 0;
  overflow: initial;
  line-height: inherit;
  word-wrap: normal;
  background-color: transparent;
  border: 0;
}

.markdown-body pre code:before,
.markdown-body pre code:after {
  content: normal;
}

/* Admonition */
.markdown-body .admonition {
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  position: relative;
  border-radius: 3px;
  border: 1px solid #e0e0e0;
  border-left: 6px solid #333;
  padding: 10px 10px 10px 30px;
}

.markdown-body .admonition table {
  color: #333;
}

.markdown-body .admonition p {
  padding: 0;
}

.markdown-body .admonition-title {
  font-weight: bold;
  margin: 0;
}

.markdown-body .admonition>.admonition-title {
  color: #333;
}

.markdown-body .attention>.admonition-title {
  color: #a6d796;
}

.markdown-body .caution>.admonition-title {
  color: #d7a796;
}

.markdown-body .hint>.admonition-title {
  color: #96c6d7;
}

.markdown-body .danger>.admonition-title {
  color: #c25f77;
}

.markdown-body .question>.admonition-title {
  color: #96a6d7;
}

.markdown-body .note>.admonition-title {
  color: #d7c896;
}

.markdown-body .admonition:before,
.markdown-body .attention:before,
.markdown-body .caution:before,
.markdown-body .hint:before,
.markdown-body .danger:before,
.markdown-body .question:before,
.markdown-body .note:before {
  font: normal normal 16px fontawesome-mini;
  -moz-osx-font-smoothing: grayscale;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  line-height: 1.5;
  color: #333;
  position: absolute;
  left: 0;
  top: 0;
  padding-top: 10px;
  padding-left: 10px;
}

.markdown-body .admonition:before {
  content: "\f056\00a0";
  color: 333;
}

.markdown-body .attention:before {
  content: "\f058\00a0";
  color: #a6d796;
}

.markdown-body .caution:before {
  content: "\f06a\00a0";
  color: #d7a796;
}

.markdown-body .hint:before {
  content: "\f05a\00a0";
  color: #96c6d7;
}

.markdown-body .danger:before {
  content: "\f057\00a0";
  color: #c25f77;
}

.markdown-body .question:before {
  content: "\f059\00a0";
  color: #96a6d7;
}

.markdown-body .note:before {
  content: "\f040\00a0";
  color: #d7c896;
}

.markdown-body .admonition::after {
  content: normal;
}

.markdown-body .attention {
  border-left: 6px solid #a6d796;
}

.markdown-body .caution {
  border-left: 6px solid #d7a796;
}

.markdown-body .hint {
  border-left: 6px solid #96c6d7;
}

.markdown-body .danger {
  border-left: 6px solid #c25f77;
}

.markdown-body .question {
  border-left: 6px solid #96a6d7;
}

.markdown-body .note {
  border-left: 6px solid #d7c896;
}

.markdown-body .admonition>*:first-child {
  margin-top: 0 !important;
}

.markdown-body .admonition>*:last-child {
  margin-bottom: 0 !important;
}

/* progress bar*/
.markdown-body .progress {
  display: block;
  width: 300px;
  margin: 10px 0;
  height: 24px;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  background-color: #ededed;
  position: relative;
  box-shadow: inset -1px 1px 3px rgba(0, 0, 0, .1);
}

.markdown-body .progress-label {
  position: absolute;
  text-align: center;
  font-weight: bold;
  width: 100%; margin: 0;
  line-height: 24px;
  color: #333;
  text-shadow: 1px 1px 0 #fefefe, -1px -1px 0 #fefefe, -1px 1px 0 #fefefe, 1px -1px 0 #fefefe, 0 1px 0 #fefefe, 0 -1px 0 #fefefe, 1px 0 0 #fefefe, -1px 0 0 #fefefe, 1px 1px 2px #000;
  -webkit-font-smoothing: antialiased !important;
  white-space: nowrap;
  overflow: hidden;
}

.markdown-body .progress-bar {
  height: 24px;
  float: left;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  background-color: #96c6d7;
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, .5), inset 0 -1px 0 rgba(0, 0, 0, .1);
  background-size: 30px 30px;
  background-image: -webkit-linear-gradient(
    135deg, rgba(255, 255, 255, .4) 27%,
    transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%,
    transparent 77%, transparent
  );
  background-image: -moz-linear-gradient(
    135deg,
    rgba(255, 255, 255, .4) 27%, transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%, transparent 77%,
    transparent
  );
  background-image: -ms-linear-gradient(
    135deg,
    rgba(255, 255, 255, .4) 27%, transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%, transparent 77%,
    transparent
  );
  background-image: -o-linear-gradient(
    135deg,
    rgba(255, 255, 255, .4) 27%, transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%, transparent 77%,
    transparent
  );
  background-image: linear-gradient(
    135deg,
    rgba(255, 255, 255, .4) 27%, transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%, transparent 77%,
    transparent
  );
}

.markdown-body .progress-100plus .progress-bar {
  background-color: #a6d796;
}

.markdown-body .progress-80plus .progress-bar {
  background-color: #c6d796;
}

.markdown-body .progress-60plus .progress-bar {
  background-color: #d7c896;
}

.markdown-body .progress-40plus .progress-bar {
  background-color: #d7a796;
}

.markdown-body .progress-20plus .progress-bar {
  background-color: #d796a6;
}

.markdown-body .progress-0plus .progress-bar {
  background-color: #c25f77;
}

.markdown-body .candystripe-animate .progress-bar{
  -webkit-animation: animate-stripes 3s linear infinite;
  -moz-animation: animate-stripes 3s linear infinite;
  animation: animate-stripes 3s linear infinite;
}

@-webkit-keyframes animate-stripes {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 60px 0;
  }
}

@-moz-keyframes animate-stripes {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 60px 0;
  }
}

@keyframes animate-stripes {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 60px 0;
  }
}

.markdown-body .gloss .progress-bar {
  box-shadow:
    inset 0 4px 12px rgba(255, 255, 255, .7),
    inset 0 -12px 0 rgba(0, 0, 0, .05);
}

/* Multimarkdown Critic Blocks */
.markdown-body .critic_mark {
  background: #ff0;
}

.markdown-body .critic_delete {
  color: #c82829;
  text-decoration: line-through;
}

.markdown-body .critic_insert {
  color: #718c00 ;
  text-decoration: underline;
}

.markdown-body .critic_comment {
  color: #8e908c;
  font-style: italic;
}

.markdown-body .headeranchor {
  font: normal normal 16px octicons-anchor;
  line-height: 1;
  display: inline-block;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.headeranchor:before {
  content: '\f05c';
}

.markdown-body .task-list-item {
  list-style-type: none;
}

.markdown-body .task-list-item+.task-list-item {
  margin-top: 3px;
}

.markdown-body .task-list-item input {
  margin: 0 4px 0.25em -20px;
  vertical-align: middle;
}

/* Media */
@media only screen and (min-width: 480px) {
  .markdown-body {
    font-size:14px;
  }
}

@media only screen and (min-width: 768px) {
  .markdown-body {
    font-size:16px;
  }
}

@media print {
  .markdown-body * {
    background: transparent !important;
    color: black !important;
    filter:none !important;
    -ms-filter: none !important;
  }

  .markdown-body {
    font-size:12pt;
    max-width:100%;
    outline:none;
    border: 0;
  }

  .markdown-body a,
  .markdown-body a:visited {
    text-decoration: underline;
  }

  .markdown-body .headeranchor-link {
    display: none;
  }

  .markdown-body a[href]:after {
    content: " (" attr(href) ")";
  }

  .markdown-body abbr[title]:after {
    content: " (" attr(title) ")";
  }

  .markdown-body .ir a:after,
  .markdown-body a[href^="javascript:"]:after,
  .markdown-body a[href^="#"]:after {
    content: "";
  }

  .markdown-body pre {
    white-space: pre;
    white-space: pre-wrap;
    word-wrap: break-word;
  }

  .markdown-body pre,
  .markdown-body blockquote {
    border: 1px solid #999;
    padding-right: 1em;
    page-break-inside: avoid;
  }

  .markdown-body .progress,
  .markdown-body .progress-bar {
    -moz-box-shadow: none;
    -webkit-box-shadow: none;
    box-shadow: none;
  }

  .markdown-body .progress {
    border: 1px solid #ddd;
  }

  .markdown-body .progress-bar {
    height: 22px;
    border-right: 1px solid #ddd;
  }

  .markdown-body tr,
  .markdown-body img {
    page-break-inside: avoid;
  }

  .markdown-body img {
    max-width: 100% !important;
  }

  .markdown-body p,
  .markdown-body h2,
  .markdown-body h3 {
    orphans: 3;
    widows: 3;
  }

  .markdown-body h2,
  .markdown-body h3 {
    page-break-after: avoid;
  }
}
</style><title>Space Time Cube</title></head><body><article class="markdown-body"><p>传统的空间聚类模式识别是基于一个空间聚类分析来识别具有统计显著性的热点、冷点和空间异常值的位置。</p>
<h3 id="_1"><a name="user-content-_1" href="#_1" class="headeranchor-link" aria-hidden="true"><span class="headeranchor"></span></a>空间关系建模基础概念</h3>
<p><strong>注意事项</strong>:</p>
<blockquote>
<ul>
<li>空间统计中基于欧氏距离或曼哈顿距离来度量距离，总是针对投影数据来进行的操作，所以在运用之前一定要将地理数据转换为投影数据；</li>
<li>使用shapefile时，不能存储空值（<b>特别注意可能在数据处理过程中会将空值存储为0或者极大的负值</b>）</li>
</ul>
</blockquote>
<h4 id="1-conceptulization-of-spatial-relationships"><a name="user-content-1-conceptulization-of-spatial-relationships" href="#1-conceptulization-of-spatial-relationships" class="headeranchor-link" aria-hidden="true"><span class="headeranchor"></span></a>1.空间关系概念化  Conceptulization of Spatial  Relationships</h4>
<p><strong>适用</strong>：空间自相关（global Moran’s I）、聚类和异常值分析（Anselin local Moran&rsquo;s I）、热点分析（Getis-Ord Gi*）等，注意某些选项只有在生成<code>空间权重矩阵</code>或生成<code>网络空间权重</code>时才可用。</p>
<ol>
<li>
<p>反距离、反距离平方（阻抗）<br>
使用“反距离”选项时，空间关系的概念模型是一种阻抗或距离衰减。任何要素都会影响其他所有要素，但距离越远，影响越小。使用反距离这一概念化表述时，通常要指定一个距离范围或距离阈值以减少所需的计算数（尤其对于大型数据集而言）。<br>
反欧氏距离适用于对连续数据（如温度变化）进行建模。当分析涉及硬件存储的位置或其他固定的城市设施位置时，道路网络数据不再适用，而反曼哈顿距离可能最为合适。</p>
</li>
<li>
<p>固定距离范围（影响的范围）<br>
对于某些工具（如热点分析），固定距离范围是默认空间关系的概念化。通过“固定距离范围”选项，可以对数据施加一个空间交互的影响范围或移动窗口概念模型。只为在距离范围内的每个要素进行分析，权重相等，范围外的不参与运算，权重为0。</p>
</li>
<li>
<p>无差别的区域<br>
该选项是将“反距离”模型和“固定距离范围”模型合并为一体。距离范围或距离阈值内的所有要素都包含在对目标要素的分析中，超过关键距离后，影响级别（权重）会快速下降。<br>
这种情况下，距离会变得更像是阻抗并且可能影响到最终决策。</p>
</li>
<li>
<p>面邻接（一阶）<br>
对于面要素类，可选择 CONTIGUITY_EDGES_ONLY（有时称为 Rook&rsquo;s Case）或 CONTIGUITY_EDGES_CORNERS（有时称为 Queen&rsquo;s Case）。对于 EDGES_ONLY，共享边（具有重合边界）的面包含在目标面的计算中。不共享边的面被排除在目标要素计算之外。对于 EDGES_CORNERS，共享边和/或角的面包含于目标面的计算中。</p>
</li>
<li>
<p>K最近邻域<br>
构造邻域关系，以便每个要素都可在其指定数量的最近邻域空间环境内进行评估。该种方式在要素密度高的位置处，分析的空间范围会比较小。与此类似，要素密度稀的位置，分析的空间范围会比较大。<br>
应用于<code>生成空间权重矩阵（Generate Spatial Weights Matrix）</code>工具，以结合探索性回归评估回归残差。相邻要素数目设置为8。</p>
</li>
<li>
<p>Delaunay三角测量（自然邻域）<br>
使用“Delaunay 三角测量”选项可构造邻域，方法是通过点要素或要素质心创建 Voronoi 三角形，使得每个点/质心都是三角形结点。由三角形的边连接的结点被视为相邻结点。使用 Delaunay 三角测量可确保每个要素至少具有一个邻域，即使数据包含岛和/或变化明显的要素密度。可用于<code>生成空间权重矩阵</code>工具中。<br>
注：有要素重合时不可使用。</p>
</li>
<li>
<p>空间时间窗<br>
根据空间窗（固定距离）和时间窗（固定时间间隔）来定义要素的关系。当使用<code>生成空间权重矩阵</code>工具创建空间权重矩阵文件时，此选项可用，且以此配合热点分析空间-时间热点。</p>
</li>
<li>
<p>通过文件获取空间权重<br>
可用于<code>生成空间权重矩阵</code>工具或<code>生成网络空间权重</code>工具来创建存储要素邻域关系的文件。<br>
例如要使用根据网络数据集获得的行程时间或行程成本来定义空间关系，可使用生成网络空间权重工具创建空间权重矩阵文件，然后使用得到的 SWM 文件进行分析。</p>
</li>
</ol>
<h4 id="2-distance-band-threshold-distance"><a name="user-content-2-distance-band-threshold-distance" href="#2-distance-band-threshold-distance" class="headeranchor-link" aria-hidden="true"><span class="headeranchor"></span></a>2.距离范围或距离阈值  distance band/ threshold distance</h4>
<p>使用距离范围或距离阈值可设置大多数空间关系的概念化（例如，反距离、固定距离范围）的分析比例。<br>
使用“无差别的区域 ZONE_OF_INDIFFERENCE”时，指定距离之外的要素的影响会随邻近程度的减小而变弱，而距离阈值之内的影响则视为是相等的。<br>
空间关系的概念化参数的不同选项对于三种可能的输入类型（负值无效）的行为方式如下：<br>
<img alt="distance band" src="/2017/11/03/Space-Time-Cube/distance" title="band.png"></p>
<h4 id="3"><a name="user-content-3" href="#3" class="headeranchor-link" aria-hidden="true"><span class="headeranchor"></span></a>3.权重矩阵</h4>
<p>空间权重是反映数据集中每个要素和其他任何一个要素之间的距离、时间或其他成本的数字，格式可为ASCII文件。<br>
<strong>格式</strong>：<br>
第一行是唯一ID字段的名称，每个要素具有唯一值；后面的每行为三列，分别为起始要素ID、终止要素ID和权重。<br>
注：权重在表示距离或时间会被取到数。</p>
<h3 id="_2"><a name="user-content-_2" href="#_2" class="headeranchor-link" aria-hidden="true"><span class="headeranchor"></span></a>聚类和异常值分析</h3>
<p>ArcGIS中的<code>Cluster and Outlier (Anselin Local Morans I)</code>工具<br>
<img alt="local Moran's I" src="/2017/11/03/Space-Time-Cube/local" title="Moran's I.png"></p>
<p><strong>1.作用</strong>：该工具是根据指定的分析字段来识别高值或低值的要素在空间上的聚类，同时可以识别异常值。计算结果有<code>local Moran's I指数</code>、<code>z得分</code>、<code>p值</code>和每个具有显著统计学意义的要素的聚类所属类型的编码，其中z得分和p值表示计算出的local Moran&rsquo;s I指数的统计显著性。</p>
<p><strong>2.公式</strong>：<br>
<img alt="formula local Moran's I" src="/2017/11/03/Space-Time-Cube/formula" title="local Moran's I.png"></p>
<p><strong>3.解释</strong>：</p>
<blockquote>
<ul>
<li>local Moran&rsquo;s I：正值表示要素周围具有同样高或低的邻近要素；负值表示要素周围具有不同值的邻近要素，即为异常值。<ul>
<li>注：被视为统计学上显著性的聚类和异常值，其对应的p值必须足够小</li>
</ul>
</li>
<li>聚类/异常值类型 (COType) 字段：HH聚类、LL聚类；HL聚类、LH聚类（异常值）。</li>
</ul>
</blockquote>
<p><strong>4.应用准则</strong>：</p>
<blockquote>
<ul>
<li>要素至少包括30个；</li>
<li>输入字段为数值型，如果是点数据，则无需特定数值属性；</li>
<li>如果查找多个事件点或少许事件点的位置，可用热点分析工具<code>Getis-Ord Gi*</code>；<ul>
<li>注：只有聚类和异常值分析<code>Anselin Local Moran's I</code>工具可以识别统计学显著性和空间异常值（HL/LH）</li>
</ul>
</li>
<li>合适的距离范围或阈值范围；<ul>
<li>所有要素至少具有一个相邻要素</li>
<li>任何要素都不应该将其它所有要素都作为相邻要素</li>
<li>输入字段的值有偏斜时，每个要素应具有大约八个相邻要素</li>
</ul>
</li>
</ul>
</blockquote>
<p><strong>5.应用</strong>：</p>
<blockquote>
<ul>
<li>犯罪的高低值边界；</li>
<li>空间异常点检测。</li>
</ul>
</blockquote>
<p><strong>6.实例</strong>:<br>
上海市两抢一盗<br>
<img alt="LQYD local Moran's I" src="/2017/11/03/Space-Time-Cube/LQYD" title="local Moran's I"></p>
<h3 id="geti-ord-gi"><a name="user-content-geti-ord-gi" href="#geti-ord-gi" class="headeranchor-link" aria-hidden="true"><span class="headeranchor"></span></a>热点分析（Geti-Ord  Gi*）</h3>
<p>ArcGIS中的<code>Hot Spot Analysis（Getis-Ord Gi*）</code>工具<br>
<img alt="Getis-Ord Gi*" src="/2017/11/03/Space-Time-Cube/Getis-Ord" title="Gi.png"></p>
<p>热点分析工具是对数据集中的每一个要素计算Getis-Ord Gi*。然后通过z得分和p值，即可知道高值或低值要素在空间上发生聚类的位置。<br>
<strong>1.原理</strong>：高值要素很容易发现，但是有可能不具有统计学意义，所以要根据邻近要素是否为高值，且同样被邻近高值要素环绕。<br>
量化：某个要素及其相邻要素的局部总和将与所有要素的总和进行比较；当局部总和与所预期的局部总和有很大差异，以致于无法成为随机产生的结果时，会产生一个具有显著统计学意义的 <code>z 得分</code>。</p>
<p><strong>2.公式</strong>:<br>
<img alt="formula Getis-Ord Gi*" src="/2017/11/03/Space-Time-Cube/formula" title="Getis-Ord Gi.png"></p>
<p><strong>3.解释</strong>：<br>
具有显著统计学意义的z得分，正值z越大，则热点的聚类越紧密，反之负值z越小，则冷点的聚类就越紧密。</p>
<p><strong>4.注意</strong>：</p>
<blockquote>
<ol>
<li>分析字段：热点分析评估的是值在空间上的高低聚类情况，包含该类值的字段为输入字段。特别注意的是点事件数据，针对该类分析是关注于点密度，热点分析工具不能直接完成此操作，需要将点数据先进行聚合，如在格网上进行计数、某个点一定范围内的点数量等，然后以此点计数字段作为输入字段；</li>
<li>参数选取<ul>
<li>空间关系的概念化（Conceptualization of Spatial Relationships）：默认FIEXD_DISTANCE_BAND(推荐)</li>
<li>距离范围（Distance Method）：</li>
<li>距离阈值（Threshold Distance）：</li>
</ul>
</li>
</ol>
</blockquote>
<p><strong>5.应用准则</strong>：</p>
<blockquote>
<ol>
<li>输入要素类至少包含30个要素；</li>
<li>空间关系概念化推荐FIXED_DISTANCE_BAND；</li>
<li>距离范围或距离阈值<ul>
<li>所有要素至少具有一个相邻要素；</li>
<li>任何要素都不应该将其它所有要素都作为相邻要素；</li>
<li>输入字段的值有偏斜时，每个要素应具有大约八个相邻要素</li>
</ul>
</li>
</ol>
</blockquote>
<h3 id="_3"><a name="user-content-_3" href="#_3" class="headeranchor-link" aria-hidden="true"><span class="headeranchor"></span></a>时空模式挖掘</h3>
<p>主要内容包括空间和时间上数据的分布和模式分析。</p>
<h4 id="1netcdf"><a name="user-content-1netcdf" href="#1netcdf" class="headeranchor-link" aria-hidden="true"><span class="headeranchor"></span></a>1.NetCDF 数据结构</h4>
<p>全称是网络公用数据格式，是一种用来存储温度、湿度、气压、风速和风向等多维科学数据（变量）的文件格式。在 ArcGIS 中，通过根据 NetCDF 文件创建图层或表视图，可以用一个维度（例如时间）来显示上述所有变量。<br>
<strong>特性</strong>：自描述性、可移植性、可扩展性<br>
<strong>基本组成</strong>：维度、变量和属性<br>
<strong>ArcGIS中使用</strong>：在MultiDimension Tools 中有多个工具关于NetCDF 的工具可以操作该数据格式。<br>
<a href="http://desktop.arcgis.com/zh-cn/arcmap/10.4/manage-data/netcdf/about-the-netcdf-tutorial.htm" target="_blank" rel="external">ArcGIS 帮助链接</a></p>
<h4 id="2"><a name="user-content-2" href="#2" class="headeranchor-link" aria-hidden="true"><span class="headeranchor"></span></a>2.创建时空立方体</h4>
<p>将一组点聚合到时空条柱将其汇总到NetCDF数据结构中，在每个条柱内计算点并聚合指定属性。然后对所有条柱位置评估计数趋势和汇总字段值。<br>
<img alt="创建NetCDF" src="/2017/11/03/Space-Time-Cube/create" title="netCDF.png"></p>
<h4 id="3_1"><a name="user-content-3_1" href="#3_1" class="headeranchor-link" aria-hidden="true"><span class="headeranchor"></span></a>3.新兴时空热点分析</h4>
<p>识别时空立方体中点计数或汇总字段聚类中的趋势，类别包括新增的、连续的、加强的、持续的、逐渐减少的、分散的、振荡的以及历史的热点和冷点。<br>
<img alt="识别点" src="/2017/11/03/Space-Time-Cube/identify" title="hot spot.png"></p>
<h4 id="4"><a name="user-content-4" href="#4" class="headeranchor-link" aria-hidden="true"><span class="headeranchor"></span></a>4.挖掘工具</h4></article></body></html>]]></content>
    
    <summary type="html">
    
      &lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;meta name=&quot;author&quot; content=&quot;yxcui&quot;&gt;
&lt;meta name=&quot;date&quot; content=&quot;2017-11-03 09:26:20&quot;&gt;
&lt;meta
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Space Time Cube</title>
    <link href="http://yxcui.github.io/2017/11/03/Space-Time-Cube/"/>
    <id>http://yxcui.github.io/2017/11/03/Space-Time-Cube/</id>
    <published>2017-11-03T01:26:20.000Z</published>
    <updated>2017-11-13T13:13:11.476Z</updated>
    
    <content type="html"><![CDATA[<p>传统的空间聚类模式识别是基于一个空间聚类分析来识别具有统计显著性的热点、冷点和空间异常值的位置。</p>
<h3 id="空间关系建模基础概念"><a href="#空间关系建模基础概念" class="headerlink" title="空间关系建模基础概念"></a>空间关系建模基础概念</h3><p><strong>注意事项</strong>:</p>
<blockquote>
<ul>
<li>空间统计中基于欧氏距离或曼哈顿距离来度量距离，总是针对投影数据来进行的操作，所以在运用之前一定要将地理数据转换为投影数据；</li>
<li>使用shapefile时，不能存储空值（<b>特别注意可能在数据处理过程中会将空值存储为0或者极大的负值</b>）</li>
</ul>
</blockquote>
<h4 id="1-空间关系概念化-Conceptulization-of-Spatial-Relationships"><a href="#1-空间关系概念化-Conceptulization-of-Spatial-Relationships" class="headerlink" title="1.空间关系概念化  Conceptulization of Spatial  Relationships"></a>1.空间关系概念化  Conceptulization of Spatial  Relationships</h4><p><strong>适用</strong>：空间自相关（global Moran’s I）、聚类和异常值分析（Anselin local Moran’s I）、热点分析（Getis-Ord Gi*）等，注意某些选项只有在生成<code>空间权重矩阵</code>或生成<code>网络空间权重</code>时才可用。</p>
<ol>
<li><p>反距离、反距离平方（阻抗）<br>使用“反距离”选项时，空间关系的概念模型是一种阻抗或距离衰减。任何要素都会影响其他所有要素，但距离越远，影响越小。使用反距离这一概念化表述时，通常要指定一个距离范围或距离阈值以减少所需的计算数（尤其对于大型数据集而言）。<br>反欧氏距离适用于对连续数据（如温度变化）进行建模。当分析涉及硬件存储的位置或其他固定的城市设施位置时，道路网络数据不再适用，而反曼哈顿距离可能最为合适。</p>
</li>
<li><p>固定距离范围（影响的范围）<br>对于某些工具（如热点分析），固定距离范围是默认空间关系的概念化。通过“固定距离范围”选项，可以对数据施加一个空间交互的影响范围或移动窗口概念模型。只为在距离范围内的每个要素进行分析，权重相等，范围外的不参与运算，权重为0。</p>
</li>
<li><p>无差别的区域<br>该选项是将“反距离”模型和“固定距离范围”模型合并为一体。距离范围或距离阈值内的所有要素都包含在对目标要素的分析中，超过关键距离后，影响级别（权重）会快速下降。<br>这种情况下，距离会变得更像是阻抗并且可能影响到最终决策。</p>
</li>
<li><p>面邻接（一阶）<br>对于面要素类，可选择 CONTIGUITY_EDGES_ONLY（有时称为 Rook’s Case）或 CONTIGUITY_EDGES_CORNERS（有时称为 Queen’s Case）。对于 EDGES_ONLY，共享边（具有重合边界）的面包含在目标面的计算中。不共享边的面被排除在目标要素计算之外。对于 EDGES_CORNERS，共享边和/或角的面包含于目标面的计算中。</p>
</li>
<li><p>K最近邻域<br>构造邻域关系，以便每个要素都可在其指定数量的最近邻域空间环境内进行评估。该种方式在要素密度高的位置处，分析的空间范围会比较小。与此类似，要素密度稀的位置，分析的空间范围会比较大。<br>应用于<code>生成空间权重矩阵（Generate Spatial Weights Matrix）</code>工具，以结合探索性回归评估回归残差。相邻要素数目设置为8。</p>
</li>
<li><p>Delaunay三角测量（自然邻域）<br>使用“Delaunay 三角测量”选项可构造邻域，方法是通过点要素或要素质心创建 Voronoi 三角形，使得每个点/质心都是三角形结点。由三角形的边连接的结点被视为相邻结点。使用 Delaunay 三角测量可确保每个要素至少具有一个邻域，即使数据包含岛和/或变化明显的要素密度。可用于<code>生成空间权重矩阵</code>工具中。<br>注：有要素重合时不可使用。</p>
</li>
<li><p>空间时间窗<br>根据空间窗（固定距离）和时间窗（固定时间间隔）来定义要素的关系。当使用<code>生成空间权重矩阵</code>工具创建空间权重矩阵文件时，此选项可用，且以此配合热点分析空间-时间热点。</p>
</li>
<li><p>通过文件获取空间权重<br>可用于<code>生成空间权重矩阵</code>工具或<code>生成网络空间权重</code>工具来创建存储要素邻域关系的文件。<br>例如要使用根据网络数据集获得的行程时间或行程成本来定义空间关系，可使用生成网络空间权重工具创建空间权重矩阵文件，然后使用得到的 SWM 文件进行分析。</p>
</li>
</ol>
<h4 id="2-距离范围或距离阈值-distance-band-threshold-distance"><a href="#2-距离范围或距离阈值-distance-band-threshold-distance" class="headerlink" title="2.距离范围或距离阈值  distance band/ threshold distance"></a>2.距离范围或距离阈值  distance band/ threshold distance</h4><p>使用距离范围或距离阈值可设置大多数空间关系的概念化（例如，反距离、固定距离范围）的分析比例。<br>使用“无差别的区域 ZONE_OF_INDIFFERENCE”时，指定距离之外的要素的影响会随邻近程度的减小而变弱，而距离阈值之内的影响则视为是相等的。<br>空间关系的概念化参数的不同选项对于三种可能的输入类型（负值无效）的行为方式如下：<br><img src="/2017/11/03/Space-Time-Cube/distance band.png" alt="distance band"></p>
<h4 id="3-权重矩阵"><a href="#3-权重矩阵" class="headerlink" title="3.权重矩阵"></a>3.权重矩阵</h4><p>空间权重是反映数据集中每个要素和其他任何一个要素之间的距离、时间或其他成本的数字，格式可为ASCII文件。<br><strong>格式</strong>：<br>第一行是唯一ID字段的名称，每个要素具有唯一值；后面的每行为三列，分别为起始要素ID、终止要素ID和权重。<br>注：权重在表示距离或时间会被取到数。</p>
<h3 id="聚类和异常值分析"><a href="#聚类和异常值分析" class="headerlink" title="聚类和异常值分析"></a>聚类和异常值分析</h3><p>ArcGIS中的<code>Cluster and Outlier (Anselin Local Morans I)</code>工具<br><img src="/2017/11/03/Space-Time-Cube/local Moran&#39;s I.png" alt="local Moran&#39;s I"></p>
<p><strong>1.作用</strong>：该工具是根据指定的分析字段来识别高值或低值的要素在空间上的聚类，同时可以识别异常值。计算结果有<code>local Moran&#39;s I指数</code>、<code>z得分</code>、<code>p值</code>和每个具有显著统计学意义的要素的聚类所属类型的编码，其中z得分和p值表示计算出的local Moran’s I指数的统计显著性。</p>
<p><strong>2.公式</strong>：<br><img src="/2017/11/03/Space-Time-Cube/formula local Moran&#39;s I.png" alt="formula local Moran&#39;s I"></p>
<p><strong>3.解释</strong>：</p>
<blockquote>
<ul>
<li>local Moran’s I：正值表示要素周围具有同样高或低的邻近要素；负值表示要素周围具有不同值的邻近要素，即为异常值。<ul>
<li>注：被视为统计学上显著性的聚类和异常值，其对应的p值必须足够小</li>
</ul>
</li>
<li>聚类/异常值类型 (COType) 字段：HH聚类、LL聚类；HL聚类、LH聚类（异常值）。</li>
</ul>
</blockquote>
<p><strong>4.应用准则</strong>：</p>
<blockquote>
<ul>
<li>要素至少包括30个；</li>
<li>输入字段为数值型，如果是点数据，则无需特定数值属性；</li>
<li>如果查找多个事件点或少许事件点的位置，可用热点分析工具<code>Getis-Ord Gi*</code>；<ul>
<li>注：只有聚类和异常值分析<code>Anselin Local Moran&#39;s I</code>工具可以识别统计学显著性和空间异常值（HL/LH）</li>
</ul>
</li>
<li>合适的距离范围或阈值范围；<ul>
<li>所有要素至少具有一个相邻要素</li>
<li>任何要素都不应该将其它所有要素都作为相邻要素</li>
<li>输入字段的值有偏斜时，每个要素应具有大约八个相邻要素</li>
</ul>
</li>
</ul>
</blockquote>
<p><strong>5.应用</strong>：</p>
<blockquote>
<ul>
<li>犯罪的高低值边界；</li>
<li>空间异常点检测。</li>
</ul>
</blockquote>
<p><strong>6.实例</strong>:<br>上海市两抢一盗<br><img src="/2017/11/03/Space-Time-Cube/LQYD local Moran&#39;s I" alt="LQYD local Moran&#39;s I"></p>
<h3 id="热点分析（Geti-Ord-Gi-）"><a href="#热点分析（Geti-Ord-Gi-）" class="headerlink" title="热点分析（Geti-Ord  Gi*）"></a>热点分析（Geti-Ord  Gi*）</h3><p>ArcGIS中的<code>Hot Spot Analysis（Getis-Ord Gi*）</code>工具<br><img src="/2017/11/03/Space-Time-Cube/Getis-Ord Gi.png" alt="Getis-Ord Gi*"></p>
<p>热点分析工具是对数据集中的每一个要素计算Getis-Ord Gi<em>。然后通过z得分和p值，即可知道高值或低值要素在空间上发生聚类的位置。<br><em>*1.原理</em></em>：高值要素很容易发现，但是有可能不具有统计学意义，所以要根据邻近要素是否为高值，且同样被邻近高值要素环绕。<br>量化：某个要素及其相邻要素的局部总和将与所有要素的总和进行比较；当局部总和与所预期的局部总和有很大差异，以致于无法成为随机产生的结果时，会产生一个具有显著统计学意义的 <code>z 得分</code>。</p>
<p><strong>2.公式</strong>:<br><img src="/2017/11/03/Space-Time-Cube/formula Getis-Ord Gi.png" alt="formula Getis-Ord Gi*"></p>
<p><strong>3.解释</strong>：<br>具有显著统计学意义的z得分，正值z越大，则热点的聚类越紧密，反之负值z越小，则冷点的聚类就越紧密。</p>
<p><strong>4.注意</strong>：</p>
<blockquote>
<ol>
<li>分析字段：热点分析评估的是值在空间上的高低聚类情况，包含该类值的字段为输入字段。特别注意的是点事件数据，针对该类分析是关注于点密度，热点分析工具不能直接完成此操作，需要将点数据先进行聚合，如在格网上进行计数、某个点一定范围内的点数量等，然后以此点计数字段作为输入字段；</li>
<li>参数选取<ul>
<li>空间关系的概念化（Conceptualization of Spatial Relationships）：默认FIEXD_DISTANCE_BAND(推荐)</li>
<li>距离范围（Distance Method）：</li>
<li>距离阈值（Threshold Distance）：</li>
</ul>
</li>
</ol>
</blockquote>
<p><strong>5.应用准则</strong>：</p>
<blockquote>
<ol>
<li>输入要素类至少包含30个要素；</li>
<li>空间关系概念化推荐FIXED_DISTANCE_BAND；</li>
<li>距离范围或距离阈值<ul>
<li>所有要素至少具有一个相邻要素；</li>
<li>任何要素都不应该将其它所有要素都作为相邻要素；</li>
<li>输入字段的值有偏斜时，每个要素应具有大约八个相邻要素</li>
</ul>
</li>
</ol>
</blockquote>
<h3 id="时空模式挖掘"><a href="#时空模式挖掘" class="headerlink" title="时空模式挖掘"></a>时空模式挖掘</h3><p>主要内容包括空间和时间上数据的分布和模式分析。</p>
<h4 id="1-NetCDF-数据结构"><a href="#1-NetCDF-数据结构" class="headerlink" title="1.NetCDF 数据结构"></a>1.NetCDF 数据结构</h4><p>全称是网络公用数据格式，是一种用来存储温度、湿度、气压、风速和风向等多维科学数据（变量）的文件格式。在 ArcGIS 中，通过根据 NetCDF 文件创建图层或表视图，可以用一个维度（例如时间）来显示上述所有变量。<br><strong>特性</strong>：自描述性、可移植性、可扩展性<br><strong>基本组成</strong>：维度、变量和属性<br><strong>ArcGIS中使用</strong>：在MultiDimension Tools 中有多个工具关于NetCDF 的工具可以操作该数据格式。<br><a href="http://desktop.arcgis.com/zh-cn/arcmap/10.4/manage-data/netcdf/about-the-netcdf-tutorial.htm" target="_blank" rel="external">ArcGIS 帮助链接</a></p>
<h4 id="2-创建时空立方体"><a href="#2-创建时空立方体" class="headerlink" title="2.创建时空立方体"></a>2.创建时空立方体</h4><p>将一组点聚合到时空条柱将其汇总到NetCDF数据结构中，在每个条柱内计算点并聚合指定属性。然后对所有条柱位置评估计数趋势和汇总字段值。<br><img src="/2017/11/03/Space-Time-Cube/create netCDF.png" alt="创建NetCDF"></p>
<h4 id="3-新兴时空热点分析"><a href="#3-新兴时空热点分析" class="headerlink" title="3.新兴时空热点分析"></a>3.新兴时空热点分析</h4><p>识别时空立方体中点计数或汇总字段聚类中的趋势，类别包括新增的、连续的、加强的、持续的、逐渐减少的、分散的、振荡的以及历史的热点和冷点。<br><img src="/2017/11/03/Space-Time-Cube/identify hot spot.png" alt="识别点"></p>
<h4 id="4-挖掘工具"><a href="#4-挖掘工具" class="headerlink" title="4.挖掘工具"></a>4.挖掘工具</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;传统的空间聚类模式识别是基于一个空间聚类分析来识别具有统计显著性的热点、冷点和空间异常值的位置。&lt;/p&gt;
&lt;h3 id=&quot;空间关系建模基础概念&quot;&gt;&lt;a href=&quot;#空间关系建模基础概念&quot; class=&quot;headerlink&quot; title=&quot;空间关系建模基础概念&quot;&gt;&lt;/a&gt;
    
    </summary>
    
    
      <category term="GIS" scheme="http://yxcui.github.io/tags/GIS/"/>
    
  </entry>
  
  <entry>
    <title>connectivity</title>
    <link href="http://yxcui.github.io/2017/09/13/connectivity/"/>
    <id>http://yxcui.github.io/2017/09/13/connectivity/</id>
    <published>2017-09-13T01:53:40.000Z</published>
    <updated>2017-09-25T06:22:05.186Z</updated>
    
    <content type="html"><![CDATA[<p>城市交通网络支撑了城市的运行和通联，如果人是城市的血液，那么交通网络就是输送血液的血管，所以说城市交通网络对城市的运行十分重要，同时也影响着城市其他职能部分的机制，对其他职能部门正常的运行起到十分关键的作用，如最基本的城市通勤、城市规划、城市的犯罪研究等。<br>描述城市交通网络的的密度、连接度或通达性，都需要计算路网来得到相应的指标。</p>
<h4 id="1-距离度量模型"><a href="#1-距离度量模型" class="headerlink" title="1. 距离度量模型"></a>1. 距离度量模型</h4><p>衡量交通节点之间可达程度的指标，距离可以是空间距离，也可以是时间距离，所基于的数据结构是网络，距离越短，节点的可达性就越高。</p>
<h4 id="2-道路加权核密度模型"><a href="#2-道路加权核密度模型" class="headerlink" title="2. 道路加权核密度模型"></a>2. 道路加权核密度模型</h4><p>衡量城市道路建成水平的重要指标，其是借助移动的单元格，利用核函数计算单元格内要素的密度估计方法，本质是通过加权平均中心点位于采样值的局部函数来估计未知的密度分布。主要是要考虑不同等级道路的影响，针对不同的道路等级给予不同的密度权重。</p>
<h4 id="3-路网连通度"><a href="#3-路网连通度" class="headerlink" title="3. 路网连通度"></a>3. 路网连通度</h4><p>区域内各节点之间依靠道路相互连通的强度，能够从道路网络布局方面反映路网的结构特点。<br>有相应的计算公式：<br>$C = \frac{L / xi}{AN}$</p>
<blockquote>
<ul>
<li>其中L为研究区内道路总里程，A表示区域面积，N为研究区域内应连接的节点数，$\xi$为区域内道路网络的变形系数（非直线系数）。</li>
<li>当C近似为1.0时，路网布局为树状，连通性交叉；值近似为2.0时，路网布局为方格网状，连通性较好；值大于3.0时，路网布局为三角网状。</li>
</ul>
</blockquote>
<h4 id="4-道路服务指数"><a href="#4-道路服务指数" class="headerlink" title="4. 道路服务指数"></a>4. 道路服务指数</h4><p>以距道路一定距离的缓冲区作为道路所能服务的区域，计算此区域所占的面积占区域总面积的比重。<br>例如公交服务指数，定义为距公交站点一定范围内的房屋建筑（区）面积占城市房屋建筑（区）总面积的百分比，可以反映城市居民接近公共交通的程度，而公交站点作为人们出行换乘的枢纽，其分布的合理性将直接影响公交线路网的通达水平。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;城市交通网络支撑了城市的运行和通联，如果人是城市的血液，那么交通网络就是输送血液的血管，所以说城市交通网络对城市的运行十分重要，同时也影响着城市其他职能部分的机制，对其他职能部门正常的运行起到十分关键的作用，如最基本的城市通勤、城市规划、城市的犯罪研究等。&lt;br&gt;描述城市交
    
    </summary>
    
    
      <category term="GIS" scheme="http://yxcui.github.io/tags/GIS/"/>
    
  </entry>
  
  <entry>
    <title>regression_GIS</title>
    <link href="http://yxcui.github.io/2017/09/07/regression/"/>
    <id>http://yxcui.github.io/2017/09/07/regression/</id>
    <published>2017-09-07T05:50:54.000Z</published>
    <updated>2017-09-25T06:21:41.511Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.advancedtechnic.com/ud/Classical%20Samples%20of%20Multiple%20Linear%20Regression%20Analysis.htm" target="_blank" rel="external">多元回归分析示例</a></p>
<h3 id="一、探索性回归"><a href="#一、探索性回归" class="headerlink" title="一、探索性回归"></a>一、探索性回归</h3><p>在已经搜集到的解释变量中，不是所有的解释变量都是对被解释变量相关的，或者说找到一个比较正确的OLS模型是非常困难的，需要对解释变量进行一些最优化组合。探索性回归分析就是尝试解释变量的所有可能组合，以找到可以通过所有必要的OLS诊断。<br>【注】：探索性回归与逐步回归类似，但不是找到具有最高 <code>$R^2$</code>，而是找到满足OLS所有假设和要求的模型。</p>
<p><a href="http://resources.arcgis.com/zh-cn/help/main/10.2/index.html#//005p00000054000000" target="_blank" rel="external">探索性回归工具</a>，可指定参数有：<code>解释变量的最大和最小数量</code>、<code>校正$R^2$</code>、<code>系数P值</code>、<code>方差膨胀因子（VIF）</code>、<code>Jarque-Bera P值</code>（评价模型偏差，指示残差是否服从正态分布）和空间自相关P值（检验残差是否随机分布/空间聚集）的阈值条件。</p>
<p>满足的条件：</p>
<blockquote>
<ul>
<li>OLS模型条件<ul>
<li>大于指定的校正<code>$R^2$</code>阈值；</li>
<li>对于所有纳入模型的解释变量，系数<code>P值</code>小于指定的阈值；</li>
<li>对于所有纳入模型的解释变量，系数<code>VIF值</code>小于指定的阈值（经验阈值7.5）；</li>
<li>返回的<code>Jarque-Bera P值</code>大于指定的值。</li>
</ul>
</li>
<li>对模型残差运用空间自相关工具（<code>Global Moran&#39;s I</code>），计算得到的P值与指定的P值进行比较，如果小于指定的P值，则模型视为合格模型。</li>
</ul>
</blockquote>
<p>【附】：探索性回归分析工具还会对具有三个最高校正<code>$R^2$</code>结果的模型使用空间自相关工具，进行回归残差检验。</p>
<p>正确OLS模型应该满足以下条件：</p>
<blockquote>
<ul>
<li>解释变量的所有变量系数都具有统计显著性；</li>
<li>变量系数都能够反映对应解释变量与因变量之间的预期关系或与因变量之间的合理关系；</li>
<li>解释变量从VIF小于7.5的变量中获得；</li>
<li>Jarque-Bera P值不具有统计显著性，即残差不存在正态分布；</li>
<li>空间自相关P值不具有统计显著性，即残差在空间上是随机分布的偏高/低预测值。</li>
</ul>
</blockquote>
<p>【争议内容】</p>
<ol>
<li>科学方法：应该先建立正式的假设，然后才能对数据进行探索。若仅对训练数据集的拟合，会导致无法对其它数据集的预测或拟合，表现在过拟合的模型不稳定或解释变量系数显著性变小，P值变大。</li>
<li>数据挖掘：无法先验知晓有助于任何给定真实结果的所有因素。</li>
<li>针对上述争议内容，最好就是将所有数据分成训练集和验证集。</li>
</ol>
<h3 id="二、OLS"><a href="#二、OLS" class="headerlink" title="二、OLS"></a>二、OLS</h3><p>$ Y = \beta X + \mu $<br><a href="http://resources.arcgis.com/zh-cn/help/main/10.1/index.html#/na/005p00000022000000/" target="_blank" rel="external">ArcGIS OLS工具</a></p>
<p>误差零假设：</p>
<blockquote>
<ul>
<li>零条件均值 $E(\mu) = 0$</li>
<li>同方差性（对不同的自变量集合，随机误差项都有相同的方差，检验参数的估计值是不是有效的）</li>
<li>正态性</li>
</ul>
</blockquote>
<ol>
<li><code>P 值</code><br> 大多数回归都会进行统计检验以针对每个自变量的关联系数计算出一个称为P的概率值，表示的是零假设成立的概率值。<br> 零假设：关联系数与零无显著差异，即关联系数为 0；<br> P值越小，表明关联系数与零无显著差异的概率越小，即关联系数极小可能为0。</li>
<li><code>$R^2 / adjuested R^2$</code><br> 用于量化模型的性能。计算公式如下：<br> $R^2 = SSR / SST$<br> 其中 SSR为回归平方和，SST为总偏差平方和，$SST = SSR = SSE$，SSE为残差平方和。<br> 解释：值越大，残差平方和就越小，表示总偏差平方和中可以由回归平方和解释的比例越大，回归效果就越显著。<br> 局限性：当向模型中增加变量后，$R^2$会变大，但增加的解释变量不一定具有统计学意义，故出现了校正系数 $adjusted R^2$，所以解释变量增多，校正决定系数不一定会增大。<br> 注：决定系数的大小还与自变量的取值范围有关，即使$R^2$很大，模型的外推效果不一定很好，应该同时还关注均方误差 <code>MSE</code>。</li>
</ol>
<h4 id="空间数据回归常见问题"><a href="#空间数据回归常见问题" class="headerlink" title="空间数据回归常见问题"></a>空间数据回归常见问题</h4><ol>
<li>遗漏解释变量<br> 后果：其系数和对应的P值不可信<br> 解决：检查OLS残差和GWR系数 或者 OLS残差进行热点分析</li>
<li>非线性关系（OLS/GWR均为线性方法）<br> 后果：线性回归模型不佳<br> 解决：创建散点图矩阵（Scatter Plot Matrix）来了解所有变量之间的相关关系；另外可以通过变量变换来修复曲线（偏态分布-&gt;正态分布）；或者用非线性方法</li>
<li>数据异常值（建模之前完成）<br> 后果：回归关系背离最佳拟合，从而使回归系数发生偏差<br> 解决：创建散点图矩阵、直方图或箱线图来寻找异常点。若异常值不符合实际则直接删除，否则对有无异常值分别进行建模讨论。</li>
<li><p>不稳定性（空间非平稳性/异质性）<br> 后果：因变量与解释变量在研究区内表现出不一致的关系<br> 解决：ArcGIS中的OLS工具可以自动检测非平稳性问题并计算稳健标准误差，可尝试用GWR进行分析。<br> 附：Koenker(BP)评估空间非平稳性</p>
<blockquote>
<ul>
<li>用于评估模型因变量与解释变量在空间上是否表现出一致的关系；</li>
<li>如果模型在空间中表现一致，则由解释变量表示的空间进程在各个区域位置也是一直的，且预测值与每个解释变量之间关系的变化不会随着解释变量值的变化而变化（误差同方差）；</li>
<li>实例，在犯罪预测中，收入作为一个解释变量，可能对收入中位数以下的预测比对中位数以上的预测更为准确，即出现了异方差性。</li>
<li>Koenker显著性检验表面统计量是显著的，则需要稳健系数标准差和稳健概率来评估解释变量的效果。</li>
</ul>
</blockquote>
</li>
<li><p>多重共线性<br> 后果：导致模型不稳定；<br> 解决：OLS工具会给出方差膨胀因子（VIF与7.5），剔除VIF较大的解释变量，或者创建交互变量，或者增加采样大小。</p>
</li>
<li>残差的方差不一致性<br> 后果：在某些变量范围内，不能很好的预测因变量的值，结果会出现交大的偏差；<br> 解决：根据Koenker检验，参考稳健概率来确定解释变量是否具有统计显著性。</li>
<li>正态分布偏差<br> 后果：残差不服从均值为0的正态分布，关联系数的P值将变得不可靠；<br> 解决：当Jarque-Bera统计量显著时，很可能是因为错误指定了模型（缺少关键变量）或模型的关系应为非线性关系。</li>
<li>空间自相关残差<br> 后果：当模型的偏高/低估计值存在空间聚类时，会导致模型的不可靠；<br> 解决：对残差进行空间自相关检验，若出现空间聚类的统计显著性，则是因为指定错误导致的，缺失关键变量。</li>
</ol>
<h3 id="三、GWR"><a href="#三、GWR" class="headerlink" title="三、GWR"></a>三、GWR</h3><p><a href="http://resources.arcgis.com/zh-cn/help/main/10.1/index.html#/na/005p00000031000000/" target="_blank" rel="external">ArcGIS工具</a></p>
<h4 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h4><p>GWR是对每一个空间要素构建一个独立方程，将落在目标要素带宽内的要素因变量与解释变量合并作为目标要素的训练样本集；将目标要素的空间位置到其他各临近点的空间距离作为权，并嵌入到回归参数中，利用局部最小二乘法逐点参数估计。<br>【带宽】：取决于核类型、带宽方法、距离以及相邻点数。<br>注：若相邻超过1000个样本点，则只取最邻近的1000个；而硬性要求是100个要素样本集，以获得较好结果。</p>
<h4 id="核心"><a href="#核心" class="headerlink" title="核心"></a>核心</h4><p>空间权重矩阵（Spatial Weight matrix），通过不同的空间权函数来得到。</p>
<blockquote>
<ul>
<li>距离阈值法<br>  选取合适的阈值D，在阈值范围内的为局部样本数据集，该方法较为直接；</li>
<li>距离反比法<ul>
<li>$W<em>{ij} = 1 / {d</em>{ij}^\alpha$</li>
<li>该方法不宜直接使用，当回归点本身也为采样点时，易造成$W_ij$无穷大；</li>
</ul>
</li>
<li>Gauss函数（连续单调减函数）<ul>
<li>$W<em>{ij} = exp(-(s</em>{ij} / b)^2)$</li>
<li>b 为权重与距离之间函数关系的非负数衰减参数，带宽。权重会随着距离的增加而衰减，且衰减的越慢；</li>
<li>更加普适，克服了前两种的不足；</li>
</ul>
</li>
<li>截尾型函数法<br>  常用bi-square函数</li>
</ul>
</blockquote>
<h4 id="权函数带宽优化"><a href="#权函数带宽优化" class="headerlink" title="权函数带宽优化"></a>权函数带宽优化</h4><p>GWR对带宽b较为敏感，带宽过大回归参数估计的偏差过大，过小又会导致估计的方差过大。</p>
<blockquote>
<p>1 交叉验证（CV）</p>
<pre><code>- $CV = 1/n*\sum_{i=1}^n[y_i - \hat y_{!=i}(b)]^2$ (不包括目标要素本身)
- 带宽b 与 CV值可绘制一条曲线，就可直观找到CV值最小的最优带宽b；
</code></pre><p>2 AIC准则</p>
<pre><code>- AICc：用于比较不同的回归模型，具有较低AICc值的模型将更好的拟合观测数据，但其不是拟合度的绝对度量，较适合于同一因变量且具有不同解释变量的模型比较有用。
- $AIC= 2n\ln(\hat\sigma) + n\ln(2\pi) + n[(n+tr(s))/(n-2-tr(s))]$
- $\hat\sigma$是随机误差项的方差极大似然估计值，$\hat\sigma = RSS/n+tr(s)$
- 原则：使AIC最小的权函数对应的带宽b。
</code></pre></blockquote>
<h4 id="局部共线性"><a href="#局部共线性" class="headerlink" title="局部共线性"></a>局部共线性</h4><p>对GWR局部方程，用于方程的解释变量会在空间上存在聚类，会导致在局部出现多重共线性。<br>当选取Bandwidth method为AICc或CV时，GWR将查找最佳距离（FIXED核类型）胡最佳相邻点数（ADAPTIVE核类型），若存在局部多重共线性，将阻止AICc和CV解析最佳距离或最佳相邻点数。<br>解决：若出现模型错误，则指定距离或相邻点书目，然后检查要素类中的条件数（&gt;30；”Null”；极小值）查看哪些要素与共线性关联（可移除）。或者可以通过对各解释变量做空间聚类，在空间上出现相同值的位置对应的变量移除掉或将其与其它解释变量合并以便加大值的变化性。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.advancedtechnic.com/ud/Classical%20Samples%20of%20Multiple%20Linear%20Regression%20Analysis.htm&quot; target=&quot;_blank&quot; rel=
    
    </summary>
    
    
      <category term="GIS" scheme="http://yxcui.github.io/tags/GIS/"/>
    
  </entry>
  
  <entry>
    <title>五大常用算法</title>
    <link href="http://yxcui.github.io/2017/08/21/%E4%BA%94%E5%A4%A7%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/"/>
    <id>http://yxcui.github.io/2017/08/21/五大常用算法/</id>
    <published>2017-08-21T06:14:32.000Z</published>
    <updated>2017-08-21T08:24:34.895Z</updated>
    
    <content type="html"><![CDATA[<p>【<a href="http://www.cnblogs.com/steven_oyj/" target="_blank" rel="external">来源</a>】</p>
<h3 id="1-分治算法"><a href="#1-分治算法" class="headerlink" title="1.分治算法"></a>1.分治算法</h3><p>把一个复杂的问题分成两个或更多的相同或相似的子问题，再把子问题分成更小的子问题……，这样不断分解，直到最后的子问题可以简单的直接求解，而初始问题的解是子问题解的合并。<br>应用基础：排序算法（快速排序、归并排序），傅里叶变换（快速傅里叶变换）……</p>
<h4 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h4><p>分治 + <strong>递归</strong><br>两种方法一般同时出现在问题的求解中。</p>
<h4 id="适用情况"><a href="#适用情况" class="headerlink" title="适用情况"></a>适用情况</h4><p>问题特征：</p>
<blockquote>
<ol>
<li>问题分解到一定的程度就可以较为容易解决；</li>
<li>问题可以分解为若干个规模较小的相同问题，即最优子结构；<font color="red">（前提）</font></li>
<li>问题的子问题的解 <strong>可以合并</strong> 为该原始问题的解；<font color="red">（关键）</font></li>
<li>分解的各子问题是相互独立的，即子问题之间不存在交集。</li>
</ol>
</blockquote>
<p><strong>说明</strong>：如果3/4不能满足，则考虑用 贪心法或动态规划。</p>
<h4 id="经典问题"><a href="#经典问题" class="headerlink" title="经典问题"></a>经典问题</h4><blockquote>
<ul>
<li>二分搜索</li>
<li>大整数乘法</li>
<li>Strassen矩阵乘法</li>
<li>棋盘覆盖</li>
<li>合并排序</li>
<li>快速排序</li>
<li>线性时间选择</li>
<li>最接近点对问题</li>
<li>循环赛日程表</li>
<li>汉诺塔</li>
</ul>
</blockquote>
<h3 id="2-贪心算法"><a href="#2-贪心算法" class="headerlink" title="2.贪心算法"></a>2.贪心算法</h3><p>对某个问题的求解，是 <strong>当前</strong> 状态下最好的选择，即不考虑整体最优，仅是在某种意义上的局部最优解。<br>贪心策略必须具备<a href="https://baike.baidu.com/item/无后效性/1135283?fr=aladdin" target="_blank" rel="external">无后效性</a>，即某个状态以后的过程不会影响以前的状态，只与当前的状态有关。</p>
<h4 id="基本思路-1"><a href="#基本思路-1" class="headerlink" title="基本思路"></a>基本思路</h4><blockquote>
<ol>
<li>将一个问题转换为数学模型；</li>
<li>将原始问题分解为若干个子问题；</li>
<li>针对每个子问题求解，即局部最优解；</li>
<li>把各子问题的局部最优解合并为原始问题的一个解。</li>
</ol>
</blockquote>
<h4 id="适用情况-1"><a href="#适用情况-1" class="headerlink" title="适用情况"></a>适用情况</h4><p><strong>前提</strong>：局部最优解可以得到全局最优解<br>但，适用情况很少。<br>是否使用：选择该问题的实际数据进行分析。</p>
<h3 id="3-动态规划"><a href="#3-动态规划" class="headerlink" title="3.动态规划"></a>3.动态规划</h3><p>每次的决策依赖于当前的状态，对随后的状态也会产生影响，随后的状态不会影响以前的状态，即决策序列是在变化的状态中产生出来的，即求解是多阶段的最优化决策问题。</p>
<h4 id="基本思路-2"><a href="#基本思路-2" class="headerlink" title="基本思路"></a>基本思路</h4><p>与分治法类似，将待求解的问题分解为若干个子问题（阶段），按顺序求解子阶段，前一阶段的解为后一阶段提供了有用信息。<br>在求解任一阶段时，列出各种可能达到最优的局部解，丢弃其它局部解…… 依次解决各子问题，最后一个子问题为初始状态的解。</p>
<p><font>特点</font>：原始问题分解后的子问题是不相互独立的，即下一阶段的求解是建立在上一阶段局部最优解基础上的。</p>
<h4 id="适用情况-2"><a href="#适用情况-2" class="headerlink" title="适用情况"></a>适用情况</h4><p>满足的3个条件：</p>
<blockquote>
<ol>
<li>最优化原理：原始问题的最优解包含的子问题的解也是最优的；</li>
<li>无后效性：某个状态一旦确定，不会受以后状态决策的影响，即以后的过程不会影响以前的状态；</li>
<li>有重叠子问题：即子问题之间不是独立的，一个子问题在下一阶段决策中可能被多次使用到。（<font color="red">非必要条件，但是是动态规划的优势</font>）</li>
</ol>
</blockquote>
<h4 id="求解过程"><a href="#求解过程" class="headerlink" title="求解过程"></a>求解过程</h4><blockquote>
<ol>
<li>划分阶段：按照问题的时间或空间特征，把问题分解为若干个阶段。<strong>注</strong>：划分后的阶段一定是有序或可排序的。</li>
<li>确定状态和状态变量：将问题到各个阶段时所处的客观情况用不同的状态表示出来。</li>
<li>确定决策并写出状态转移方程：决策与状态转移有联系，状态转移是根据上一阶段的状态和决策来导出本阶段的状态，但是一般情况是根据相邻两个状态之间的关系来确定 决策方法和转移方程。</li>
<li>寻找边界条件：给出的状态转移方程是一个递推式，需要一个递推的终止条件或边界条件。</li>
</ol>
</blockquote>
<p>最优决策表：一个二维表，行表示决策的阶段，列表示问题的状态，即表格的值是在某个阶段某个状态下的最优值（最短路径、最大价值、最长公共子序列等）。</p>
<h3 id="4-回溯算法"><a href="#4-回溯算法" class="headerlink" title="4.回溯算法"></a>4.回溯算法</h3><p>回溯法类似于枚举，主要是在搜索尝试过程中寻找问题的解，当到达某一步时，发现原先选择的不是最优或达不到目标，就退回一步重新选择。</p>
<blockquote>
<ul>
<li>所有解：回溯到根节点，且根节点的所有可行的子树都要被遍历过才结束；</li>
<li>任一解：在搜索过程中 找到问题的一个解就可以结束。</li>
</ul>
</blockquote>
<h4 id="一般步骤"><a href="#一般步骤" class="headerlink" title="一般步骤"></a>一般步骤</h4><blockquote>
<ol>
<li>针对所给问题，确定问题的解空间<ul>
<li>首先明确定义问题的解空间，该解空间至少应该包含问题的一个（最优）解；</li>
</ul>
</li>
<li>确定节点的扩展搜索规则；</li>
<li>以 <strong>深度优先方式搜索</strong> 解空间（递归函数），并在搜索过程中用剪枝函数避免无效搜索。</li>
</ol>
</blockquote>
<h3 id="5-分支限界"><a href="#5-分支限界" class="headerlink" title="5.分支限界"></a>5.分支限界</h3><p>类似于回溯法，也是在问题的解空间树T上搜索问题解的算法。<br>但两者的求解目标不同，分支限界法的求解目标是找出满足约束条件的一个解，或是在满足约束条件的解中找出使某一个目标函数值达到极大或极小的解，即在某种意义上的最优解。</p>
<h4 id="一般过程"><a href="#一般过程" class="headerlink" title="一般过程"></a>一般过程</h4><p>分支限界法以 <strong>广度优先或以最小耗费优先</strong> 的方式搜索解空间树T。<br><strong>搜索策略</strong>：在扩展结点处，先生成其所有的儿子结点（分支），然后再从当前的活结点表中选择下一个扩展结点。为了有效地选择下一扩展结点，以加速搜索的进程，在每一活结点处，计算一个函数值（限界），并根据这些已计算出的函数值，从当前活结点表中选择一个最有利的结点作为扩展结点，使搜索朝着解空间树上有最优解的分支推进，以便尽快地找出一个最优解。</p>
<p>分支限界法常以广度优先或以最小耗费（最大效益）优先的方式搜索问题的解空间树，问题的解空间树是表示问题解空间的一棵有序树，常见的有子集树和排列树。在扩展结点的时候，每一个活结点只有一次机会成为扩展结点，活结点一旦成为扩展结点，就一次性产生其所有儿子结点，在这些儿子结点中，那些导致不可行解或导致非最优解的儿子结点被舍弃，其余儿子结点被加入活结点表中。此后，从活结点表中取下一结点成为当前扩展结点，并重复上述结点扩展过程。这个过程一直持续到找到所求的解或活结点表为空时为止。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;【&lt;a href=&quot;http://www.cnblogs.com/steven_oyj/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;来源&lt;/a&gt;】&lt;/p&gt;
&lt;h3 id=&quot;1-分治算法&quot;&gt;&lt;a href=&quot;#1-分治算法&quot; class=&quot;headerl
    
    </summary>
    
    
      <category term="algorithms" scheme="http://yxcui.github.io/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>Baidu Geocoding</title>
    <link href="http://yxcui.github.io/2017/08/16/Baidu-Geocoding/"/>
    <id>http://yxcui.github.io/2017/08/16/Baidu-Geocoding/</id>
    <published>2017-08-16T08:03:50.000Z</published>
    <updated>2017-08-16T09:18:05.424Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p>
<h3 id="有话说"><a href="#有话说" class="headerlink" title="有话说"></a>有话说</h3><p>在当前的大数据和人工智能的浪潮下，铺天盖地都是数据挖掘、机器学习和人工智能，基础就是数据，就像在地理信息领域一直说的一句话 “数据是GIS的血液”，那么推广到现在的人工智能，大数据就是人工智能的血液，没有数据就无从谈起人工智能。</p>
<p>在地理信息领域，一直存在的一个关键词就是（反）地理编码，地理编码是较为常用的一项地理信息技术，现在很多对于大量关于位置的信息都是存储为地址的形式，例如 “上海市闵行区东川路500号”，而在有关空间分析的时候是不能很好的利用这些文本地址数据去进行空间化，而是需要将其转换为一个个的地理坐标（经纬度），然后进行空间化，这样就能在传统的分析基础上，增加空间维度，使得数据分析具有空间上的意义，比如空间聚类、地理加权回归以及空间可视化。</p>
<p>本文围绕百度地图（反）地理编码进行记录。</p>
<h3 id="（反）地理编码简述"><a href="#（反）地理编码简述" class="headerlink" title="（反）地理编码简述"></a>（反）地理编码简述</h3><blockquote>
<ul>
<li>地理编码又称地址匹配，就是指将要素的地址信息（如所在的城市、路名、门牌号和邮政编码等）转换为地理坐标信息。</li>
</ul>
<ul>
<li>反地理编码，即为地理编码的逆向过程，就是将将地理坐标转换为标准地址。</li>
</ul>
<ul>
<li>地理编码服务：有很多的地图公司都提供的了在线的地理编码服务，如百度地图、谷歌地图以及高德地图等等。</li>
</ul>
</blockquote>
<h3 id="地理坐标系统"><a href="#地理坐标系统" class="headerlink" title="地理坐标系统"></a>地理坐标系统</h3><p>地理坐标的数值只有在一个标准的地理坐标系统环境下，才是有意义的，在地理学上，比较常见的就是地理坐标和投影坐标，此处只看地理坐标。</p>
<p>在国内较为常见的地理坐标系统包括WGS84，即GPS上使用的坐标系；国测局坐标，又称火星坐标系，简称GCJ02；另外就是百度坐标。</p>
<blockquote>
<ul>
<li>注：百度坐标是在火星坐标系上进一步进行加密，也只有百度地图使用；</li>
</ul>
<ul>
<li>火星坐标一般是国内常用的地图公司，如高德、腾讯和搜狗地图等等。</li>
</ul>
<ul>
<li>WGS84 坐标系是国家标准，常见的谷歌地图、osm等。</li>
</ul>
</blockquote>
<p>此文使用的是百度地图的地理编码服务，故地理编码返回的是百度坐标，然后利用转换公式将其转换为WGS-84 坐标。</p>
<h3 id="百度地图地理编码服务"><a href="#百度地图地理编码服务" class="headerlink" title="百度地图地理编码服务"></a>百度地图地理编码服务</h3><h4 id="1-百度地图地理编码服务"><a href="#1-百度地图地理编码服务" class="headerlink" title="1. 百度地图地理编码服务"></a>1. 百度地图地理编码服务</h4><p><img src="/2017/08/16/Baidu-Geocoding/BaiduMap Geocoding.png" alt="BaiduMap Geocoding"></p>
<p><a href="http://lbsyun.baidu.com/index.php?title=webapi/guide/webservice-geocoding" target="_blank" rel="external">百度地图地理编码服务</a>主界面如上，该服务提供的接口可以将地理转换为经纬度或将经纬度转换为地址，对于语言没有限制，返回的格式为JSON或XML。<br>帮助非常详细，此处不再冗余说明。</p>
<h4 id="2-Python-代码"><a href="#2-Python-代码" class="headerlink" title="2. Python 代码"></a>2. Python 代码</h4><p>利用Python进行网络请求，这就需要一些模块的支持，如<strong>urllib2</strong>用于请求服务接口，<strong>json</strong>用于解析返回的数据包，<strong>time</strong>用于持续请求的控制，过快频繁的请求会让服务器压力增大，进而可能会收到空的数据包或者返回异常，所以建议请求一定次数后间隔一段时间再发出请求，<strong>math</strong>模块用于公式的转换。<br><strong>重要的是ak，一定要申请，最好实名认证一下，这样可以增加每天的请求次数</strong>。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># geocoding service address</span></div><div class="line">urlService = <span class="string">"http://api.map.baidu.com/geocoder/v2/"</span></div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding params</span></div><div class="line">paramsCode = &#123;<span class="string">"ak"</span>:<span class="string">"your ak"</span>,<span class="string">"output"</span>:<span class="string">"json"</span>,<span class="string">"callback"</span>:<span class="string">"showLocation"</span>&#125;</div><div class="line"><span class="comment"># recoding params</span></div><div class="line">paramsRecode = &#123;<span class="string">"ak"</span>:<span class="string">"your ak"</span>,<span class="string">"output"</span>:<span class="string">"json"</span>,<span class="string">"callback"</span>:<span class="string">"renderReverse"</span>&#125;</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># url request for response</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">urlRequest</span><span class="params">(url, params)</span>:</span></div><div class="line">    request = urllib2.Request(url, urllib.urlencode(params))</div><div class="line">    html = <span class="string">"&#123;'status':1,'result':&#123;'location':&#123;'lng':0,'lat':0&#125;,'precise':0,'confidence':0,'level':'ok'&#125;&#125;"</span></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        response = urllib2.urlopen(request)</div><div class="line">        html = response.read()</div><div class="line">        response.close()</div><div class="line">        time.sleep(<span class="number">0.3</span>)   <span class="comment"># sleep for 0.3 seconds at once</span></div><div class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> err:   <span class="comment"># detect the Exception</span></div><div class="line">        <span class="keyword">print</span> err</div><div class="line">        time.sleep(<span class="number">300</span>)</div><div class="line">    <span class="keyword">finally</span>:</div><div class="line">        <span class="keyword">return</span> html</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># transfer Json text obj to Json python object</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">objToJson</span><span class="params">(docJson)</span>:</span></div><div class="line">    objJson = json.loads(docJson)   <span class="comment"># Deserialize 'docJson'(a 'str' or 'unicode' instance containing a JSON document) to a Python object</span></div><div class="line">    <span class="keyword">return</span> objJson</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># transfer address to LngLat</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">AddrToLngLat</span><span class="params">(address, city=<span class="string">'上海'</span>)</span>:</span> <span class="comment"># 请求参数address(必须)/city(非必须，默认"北京市")</span></div><div class="line">    location = &#123;&#125;</div><div class="line">    paramsCode[<span class="string">"address"</span>] = address</div><div class="line">    paramsCode[<span class="string">"city"</span>] = city</div><div class="line">    content = objToJson(urlRequest(urlService,paramsCode))</div><div class="line">    </div><div class="line">    status = content[<span class="string">'status'</span>] <span class="comment">#返回结果状态</span></div><div class="line">    <span class="keyword">if</span> status == <span class="number">0</span>:</div><div class="line">        result = content[<span class="string">'result'</span>] <span class="comment">#返回结果</span></div><div class="line">        location = result[<span class="string">'location'</span>] <span class="comment">#object类型,经纬度坐标</span></div><div class="line">        precise = result[<span class="string">'precise'</span>] <span class="comment">#位置附加信息，是否精确查找。1为精确查找，0为模糊打点</span></div><div class="line">        confidence = result[<span class="string">'confidence'</span>] <span class="comment">#可信度，描述打点精确度</span></div><div class="line">        level = result[<span class="string">'level'</span>] <span class="comment">#地址类型</span></div><div class="line">        <span class="keyword">return</span> location</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">return</span> &#123;<span class="string">'lat'</span>:<span class="number">0</span>,<span class="string">'lng'</span>:<span class="number">0</span>&#125;</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># transfer LngLat to address</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">LngLatToAddr</span><span class="params">(location,coordtype=<span class="string">'wgs84ll'</span>,pois=<span class="number">0</span>)</span>:</span> <span class="comment"># 请求参数location(必须)/coordtype(非必须，默认"bd09ll")/pois(非必须，默认"0")</span></div><div class="line">    paramsRecode[<span class="string">'location'</span>] = location</div><div class="line">    paramsRecode[<span class="string">'coordtype'</span>] = coordtype</div><div class="line">    paramsRecode[<span class="string">'pois'</span>] = pois</div><div class="line">    content = objToJson(urlRequest(urlService,paramsRecode))</div><div class="line"></div><div class="line">    status = content[<span class="string">'status'</span>] <span class="comment">#返回结果状态</span></div><div class="line">    result = content[<span class="string">'result'</span>] <span class="comment">#返回结果</span></div><div class="line">    formatted_address = result[<span class="string">'formatted_address'</span>] <span class="comment">#结构化地址信息</span></div><div class="line">    business = result[<span class="string">'business'</span>] <span class="comment">#所在商圈信息，如"人民大学,中关村,苏州街"</span></div><div class="line">    addressComponent = result[<span class="string">'addressComponent'</span>] <span class="comment">#组成地址的各部分信息</span></div><div class="line">    pois = result[<span class="string">'pois'</span>] <span class="comment">#周边POI数组，数组元素又包含商圈的基本信息</span></div><div class="line">    sematic_description = result[<span class="string">'sematic_description'</span>] <span class="comment">#当前位置结合POI的语义化结果描述</span></div><div class="line">    <span class="keyword">return</span> formatted_address</div></pre></td></tr></table></figure>
<p>以上的代码能够完整的进行（反）地理编码，但是地理编码返回的是百度坐标系，在大多数的分析软件中的是不支持的，比如ArcGIS，接下来就需要将其转换为WGS-84坐标系，以便后续的利用。<br>此公式是一个较为常用的，亲测可行。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># convert Baidu Coordinates to WGS84 that used more</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">convert</span><span class="params">(bd_lat,bd_lng)</span>:</span></div><div class="line">    <span class="keyword">import</span> math</div><div class="line">    pi = math.pi*<span class="number">3000.0</span> / <span class="number">180.0</span></div><div class="line">    x = bd_lng - <span class="number">0.0065</span></div><div class="line">    y = bd_lat - <span class="number">0.006</span></div><div class="line">    z = math.sqrt(x*x+y*y) - <span class="number">0.00002</span>*math.sin(y*pi)</div><div class="line">    theta = math.atan2(y,x) - <span class="number">0.000003</span>*math.cos(x*pi)</div><div class="line">    lng = z*math.cos(theta)</div><div class="line">    lat = z*math.sin(theta)</div><div class="line">    data = [str(lat), str(lng)]</div><div class="line">    <span class="keyword">return</span> data</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;有话说&quot;&gt;&lt;a href=&quot;#有话说&quot; class=&quot;headerlink&quot; title=&quot;有话说&quot;&gt;&lt;/a&gt;有话说&lt;/h3&gt;&lt;p&gt;在当前的大数据和人工智能的浪潮下，铺天盖地都是数据挖掘、机器学习和人工智能，基础就是数据，就像在地理信息领
    
    </summary>
    
    
      <category term="GIS" scheme="http://yxcui.github.io/tags/GIS/"/>
    
  </entry>
  
  <entry>
    <title>Step Stones</title>
    <link href="http://yxcui.github.io/2017/08/13/Step-Stones/"/>
    <id>http://yxcui.github.io/2017/08/13/Step-Stones/</id>
    <published>2017-08-13T15:03:33.000Z</published>
    <updated>2017-08-22T05:19:18.449Z</updated>
    
    <content type="html"><![CDATA[<p>跳石板，这是网易校招的一道编程题，很显然这是一个最优化的问题，由于在平常也没真正练习这些经典算法题，所以拿到题目手足无措，一开始的思路就是递归，递归是能够找到最小值，但是效率好像不理想，很显然自己搞不下去了，忽视了核心问题就是分解后的子问题不是相互独立的，而是互相有关联的。<br>算法基础是<font color="red">动态规划</font>，这是常用的最优化算法之一。<br><a href="http://blog.csdn.net/deepit/article/details/6530282" target="_blank" rel="external">递归与动态规划小结不错</a>~</p>
<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>小易来到了一条石板路前，每块石板上从1挨着编号为：1、2、3…….<br>这条石板路要根据特殊的规则才能前进：对于小易当前所在的编号为K的 石板，小易单次只能往前跳K的一个约数(不含1和K)步，即跳到K+X(X为K的一个非1和本身的约数)的位置。 小易当前处在编号为N的石板，他想跳到编号恰好为M的石板去，小易想知道最少需要跳跃几次可以到达。<br>示例：<br>N = 4，M = 24：<br>4-&gt;6-&gt;8-&gt;12-&gt;18-&gt;24<br>于是小易最少需要跳跃5次，就可以从4号石板跳到24号石板 </p>
<p><strong>输入描述</strong>：<br>输入为一行，有两个整数N，M，以空格隔开。<br>(4 ≤ N ≤ 100000)<br>(N ≤ M ≤ 100000)<br><strong>输出描述</strong>：<br>输出小易最少需要跳跃的步数,如果不能到达输出-1</p>
<p><strong>输入例子</strong>：<br>4 24<br><strong>输出例子</strong>：<br>5</p>
<h3 id="分析思路"><a href="#分析思路" class="headerlink" title="分析思路"></a>分析思路</h3><p>算法基础是动态规划，那么一般过程就是将原始问题划分为若干个子问题，但是子问题之间不是独立存在的。即上一子问题的解会影响下一步子问题的解，因此需要创建一个链表，将每个子问题的解存入，然后组合出原始问题的最优解。核心是状态转移公式。</p>
<blockquote>
<p>1.创建一维数组，用于存储从起点到达改点的最小跳跃次数；<br>    – 初试起点为0，其它元素均为int最大值，用来表示不可达</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># init a dictionary to store the count</span></div><div class="line"><span class="keyword">import</span> sys</div><div class="line">stone = &#123;&#125;</div><div class="line">stone[N] = <span class="number">0</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(N+<span class="number">1</span>, M+<span class="number">1</span>):</div><div class="line">    stone[i] = sys.maxint   <span class="comment"># the maximum int</span></div></pre></td></tr></table></figure>
<blockquote>
<p>2.遍历每一块石板，然后求解当前石板的约数（列表），针对每个约数可以求解从当前石板可以到达的石板编号，且能够获取从当前石板到达的石板的跳跃次数；<br>    – <font color="red">后一步石板最小跳跃次数求解</font>：如果后一步的石板次数是初始化的最大值，则在当前石板达到的跳跃次数基础上加1，否则与后一步石板的跳跃次数做比较，求两者中的最小者；<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> N == M:</div><div class="line">        <span class="keyword">return</span> stone[M]</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="comment"># 针对每一个石块，计算其能到达的石块，然后每个石块都保留了到达此处需要的步数，每次遍历都保留最小值，即最少需要的步数</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(N, M+<span class="number">1</span>):</div><div class="line">            divisors = calDivisors(i)</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> divisors:</div><div class="line">                <span class="keyword">if</span> i + j &lt;= M:</div><div class="line">                    stone[i + j] = min(stone[i] + <span class="number">1</span>, stone[i + j])</div></pre></td></tr></table></figure></p>
<p>附：求解一个数的所有约数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># calculate all divisors without 1 and self for a given number in the natural range</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">calDivisors</span><span class="params">(N)</span>:</span></div><div class="line">    divisors = []</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>, int(N / <span class="number">2.0</span>)+<span class="number">1</span>):   <span class="comment"># 此处如果是sqrt(N)， 应该求解的不是所有约数？</span></div><div class="line">        <span class="keyword">if</span> N % i == <span class="number">0</span>:</div><div class="line">            divisors.append(i)</div><div class="line">    <span class="comment"># divisors.append(N)</span></div><div class="line">    <span class="keyword">return</span> divisors</div></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="保留完整路径"><a href="#保留完整路径" class="headerlink" title="保留完整路径"></a>保留完整路径</h3><p>以上是能够找到从一个石板调到另外一个石板的最小跳跃次数，但是有时候希望能够保留这个最小路径，即跳跃过程是怎样的？所以需要对上述过程进行略微修改~</p>
<p>在进行跳跃次数计数的后面紧接着记录调到下一个石板的这一块石板编号，这样就记录了一个连续的过程，即记录了跳到某块石板的前一块石板编号，如“24：18”，即跳到编号为24的石板的前一块石板编号是18。<br>所以增加一行代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">stoneIndex.append(str(i+j) + <span class="string">"："</span> + str(i))   <span class="comment"># 存储到达 i+j 石块的石块编号</span></div></pre></td></tr></table></figure></p>
<p>打印输出：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">print</span> <span class="string">";  "</span>.join(stoneIndex)</div></pre></td></tr></table></figure></p>
<p>输出结果为：<br><code>6：4;  8：6;  9：6;  10：8;  12：8;  12：9;  12：10;  15：10;  14：12;  15：12;  16：12;  18：12;  16：14;  21：14;  18：15;  20：15;  18：16;  20：16;  24：16;  20：18;  21：18;  24：18;  22：20;  24：20;  24：21;  24：22</code><br>其中只有一条可以最少跳跃数完成：<br><code>4 -&gt; 6 -&gt; 8 -&gt; 12 -&gt; 18 -&gt; 24</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;跳石板，这是网易校招的一道编程题，很显然这是一个最优化的问题，由于在平常也没真正练习这些经典算法题，所以拿到题目手足无措，一开始的思路就是递归，递归是能够找到最小值，但是效率好像不理想，很显然自己搞不下去了，忽视了核心问题就是分解后的子问题不是相互独立的，而是互相有关联的。
    
    </summary>
    
    
      <category term="algorithms" scheme="http://yxcui.github.io/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>Two Sum</title>
    <link href="http://yxcui.github.io/2017/08/12/Two-Sum/"/>
    <id>http://yxcui.github.io/2017/08/12/Two-Sum/</id>
    <published>2017-08-12T13:59:56.000Z</published>
    <updated>2017-08-14T06:12:49.064Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2017/08/12/Two-Sum/Two-Sum.jpg" alt="LeetCode 问题页"></p>
<h3 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h3><blockquote>
<p>Given an array of integers, return <strong>indices</strong> of the two numbers such that they add up to a specific target.</p>
</blockquote>
<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><blockquote>
<ul>
<li>Given nums = [2, 7, 11, 15], target = 9</li>
</ul>
<ul>
<li>Because nums[0] + nums[1] = 2 + 7 = 9,</li>
</ul>
<ul>
<li>return [0, 1].</li>
</ul>
</blockquote>
<h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span><span class="params">(self, nums, target)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        :type nums: List[int]</div><div class="line">        :type target: int</div><div class="line">        :rtype: List[int]</div><div class="line">        """</div><div class="line"></div><div class="line">        allindices = []</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</div><div class="line">            <span class="comment"># The 'rest' is from 'target' minus each 'element' traversed from the list, and then judge whether the 'rest' is exist in list.</span></div><div class="line">            rest = target - nums[i]</div><div class="line"></div><div class="line">            <span class="keyword">if</span> rest <span class="keyword">in</span> nums:</div><div class="line">                allindices.append((i, nums.index(rest)))</div><div class="line"></div><div class="line">        indices = []</div><div class="line">        <span class="keyword">for</span> t <span class="keyword">in</span> allindices:</div><div class="line">            <span class="keyword">if</span> t[<span class="number">0</span>] != t[<span class="number">1</span>]:</div><div class="line">                indices.append(tuple(sorted(t)))</div><div class="line">        <span class="keyword">return</span> list(set(indices))</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    s = Solution()</div><div class="line">    indices = s.twoSum([<span class="number">0</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">0</span>], <span class="number">0</span>)</div><div class="line">    <span class="keyword">print</span> indices</div></pre></td></tr></table></figure>
<h3 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h3><blockquote>
<p>To improve the efficience of running, it’s need to optimize. And if you have a better idea or suggestion, please leave your words here!</p>
<p><a href="https://github.com/yxcui/LeetCode/blob/master/Two%20Sum.py" target="_blank" rel="external">代码链接</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2017/08/12/Two-Sum/Two-Sum.jpg&quot; alt=&quot;LeetCode 问题页&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Question&quot;&gt;&lt;a href=&quot;#Question&quot; class=&quot;headerlink&quot; title=&quot;Questi
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://yxcui.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Github+Hexo搭建博客网站---博客配置与主题</title>
    <link href="http://yxcui.github.io/2017/08/03/Github-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99-%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%B8%BB%E9%A2%98/"/>
    <id>http://yxcui.github.io/2017/08/03/Github-Hexo搭建博客网站-博客配置与主题/</id>
    <published>2017-08-03T09:09:03.000Z</published>
    <updated>2017-08-14T06:12:49.062Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">NexT配置文档</a></p>
<h3 id="添加tags、author等页面："><a href="#添加tags、author等页面：" class="headerlink" title="添加tags、author等页面："></a>添加tags、author等页面：</h3><p><code>$ cd hexo</code><br><code>$ hexo new page tags</code></p>
<h3 id="更新npm版本"><a href="#更新npm版本" class="headerlink" title="更新npm版本"></a>更新npm版本</h3><p><code>$ nmp i nmp -g</code></p>
<h3 id="添加RSS插件"><a href="#添加RSS插件" class="headerlink" title="添加RSS插件"></a>添加RSS插件</h3><p><code>$ npm install hexo-generator-feed</code></p>
<h3 id="添加search页面"><a href="#添加search页面" class="headerlink" title="添加search页面"></a>添加search页面</h3><p><code>$ npm install --save hexo-generator-search</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://theme-next.iissnan.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NexT配置文档&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;添加tags、author等页面：&quot;&gt;&lt;a href=&quot;#添加tags、auth
    
    </summary>
    
    
      <category term="Github" scheme="http://yxcui.github.io/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Github+Hexo搭建博客网站---基础环境</title>
    <link href="http://yxcui.github.io/2017/08/03/Github+Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99---%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83/"/>
    <id>http://yxcui.github.io/2017/08/03/Github+Hexo搭建博客网站---基础环境/</id>
    <published>2017-08-02T17:59:56.000Z</published>
    <updated>2017-08-14T06:12:49.062Z</updated>
    
    <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>记录博客的地方的确很多，比如CSDN、博客园、简书和作业部落等，但是这些好像不易百度到或者想直接去找自己的资料，所以如果有一个公共接口进入，能够将所有的记录内容都能访问到，就显得很easy，这就可以通过一个域名进入博客网站主页，然后就很简单找到自己记录过的笔记和心得，是个很不错的选择，还能装一装X，拥有自己的<a href="https://yxcui.github.io/">独家域名</a>。<br>以后还可以将自己做的一些工作放到博客上，比如做的一些数据分析工作等。</p>
<h3 id="所需材料"><a href="#所需材料" class="headerlink" title="所需材料"></a>所需材料</h3><h4 id="Git-安装"><a href="#Git-安装" class="headerlink" title="Git 安装"></a>Git 安装</h4><p>此前总结过<a href="https://zybuluo.com/ecnu-cyx/note/692971" target="_blank" rel="external">Git的安装和配置过程</a>。</p>
<h4 id="Node-js-安装"><a href="#Node-js-安装" class="headerlink" title="Node.js 安装"></a>Node.js 安装</h4><p>菜鸟教程上有很好的<a href="http://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="external">Node.js安装和配置教程</a>。</p>
<h4 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h4><p><a href="https://hexo.io/" target="_blank" rel="external">Hexo</a> is a fast, simple and powerful blog framework. You write posts in Markdown (or other languages) and Hexo generates static files with a beautiful theme in seconds. <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">中文帮助文档</a></p>
<h3 id="Hexo安装与配置"><a href="#Hexo安装与配置" class="headerlink" title="Hexo安装与配置"></a>Hexo安装与配置</h3><h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><p>在任意处打开Git Bash，执行<code>$ npm install -g hexo-cli</code><br>【注：npm命令是集成在新版的node.js中的，可以输入<code>npm -v</code>来查看npm的版本，即node.js的版本，出现版本号说明安装成功。npm可以从服务器下载第三方的包和命令行程序到本地，同样可以将自己写的包和命令行程序上传到NPM服务器上】</p>
<h4 id="创建本地存放博客目录"><a href="#创建本地存放博客目录" class="headerlink" title="创建本地存放博客目录"></a>创建本地存放博客目录</h4><p>选择一个本地目录，空白处右键选择Git Bash Here，执行：</p>
<blockquote>
<ul>
<li><code>$ hexo init &lt;folder&gt;</code>  #创建目录并初始化</li>
<li><code>$ cd &lt;folder&gt;</code>  #进入创建的文件夹</li>
<li><code>$ npm install</code>  #安装依赖包</li>
<li>目录结构如下：<ul>
<li>.<br>  ├── _config.yml<br>  ├── package.json<br>  ├── .gitignore<br>  ├── node_modules<br>  ├── scaffolds<br>  ├── source<br>  |   ├── _drafts<br>  |   └── _posts<br>  └── themes</li>
</ul>
</li>
</ul>
</blockquote>
<h4 id="启动本地服务"><a href="#启动本地服务" class="headerlink" title="启动本地服务"></a>启动本地服务</h4><p>执行以下命令启动本地服务：</p>
<blockquote>
<ul>
<li><code>$ hexo generate</code>  #生成静态文件</li>
<li><code>$ hexo server</code>  #启动本地服务器</li>
</ul>
</blockquote>
<p>如果启动过程中没有报错，此时可以用浏览器访问<code>http://localhost:4000/</code>，会出现一个Hello World的博客页面，hexo使用的默认主题是landscape，而且此时的服务是本地启动的，别人并不能看到。<br>【注：更改本地服务端口命令<code>hexo server -p &lt;port&gt;</code>】</p>
<h4 id="与Github连接"><a href="#与Github连接" class="headerlink" title="与Github连接"></a>与Github连接</h4><blockquote>
<ol>
<li><p>首先在Github上创建版本库New Repository<br>注意：<strong>repository的名字必须为<code>username.github.io</code>，username即为Github的账户名</strong>，我的个人地址为<code>https://yxcui.github.io</code>，如果将Repository name随意填写，是不能访问的，返回的是404的错误页面。</p>
</li>
<li><p>配置站点文件<code>_config.yml</code><br>站点配置文件位于博客目录下<code>D:\Hexo\_config.yml</code>，，找到<code>deploy</code>属性，修改为如下：</p>
<ul>
<li>注：冒号后有一位空格<br><code>deploy:
  type: git  #推送方式
  repository: https://github.com/yxcui/yxcui.github.io.git  #Github上创建的版本库目录
  branch: master  #推送的版本库分支</code></li>
</ul>
</li>
<li><p>将服务部署到Github上</p>
<ul>
<li><code>$ hexo clean</code></li>
</ul>
<ul>
<li><code>$ hexo g</code></li>
</ul>
<ul>
<li><code>$ hexo d</code>  ##<code>hexo d</code>命令第一次会要求输入用户名和密码，即Github的用户名和秘密<br>【注：如果出现错误”<code>ERROR Deployer not found : github</code>“，先运行<code>$ npm install hexo-deployer-git --save</code>，在执行上述命令】</li>
</ul>
</li>
</ol>
</blockquote>
<h4 id="创建和发布文章"><a href="#创建和发布文章" class="headerlink" title="创建和发布文章"></a>创建和发布文章</h4><blockquote>
<ol>
<li><p>定位到Hexo文件夹<br> <code>cd d:Hexo</code></p>
</li>
<li><p>新建文章<br> <code>hexo new &quot;article title&quot;</code><br> 该文件保存在Source/_post中，该文件是MarkDown文件，可用支持MarkDown编辑的工具进行编写。</p>
</li>
<li><p>发布文章<br> <code>hexo g</code><br> <code>hexo d</code><br> 【注：如果出现错误”<code>ERROR Deployer not found : github</code>“，先运行<code>$ npm install hexo-deployer-git --save</code>，再执行上述命令】</p>
</li>
<li><p>文章中图片的插入</p>
<ul>
<li>修改 _config.yml 文件中的 <code>post\_asset_folder</code>属性，改为<code>true</code>；</li>
</ul>
<ul>
<li>前提需要使用Hexo的一个插件，首先到Hexo的根目录 <code>cd d:Hexo</code>;</li>
<li>命令：<code>npm install https://github.com/CodeFalling/hexo-asset-image --save</code> / <code>npm install hexo-asset-image --save</code>安装插件;</li>
<li>然后把图片放入对应文章的配套文件夹下，如图片<code>1.jpg</code>，文中使用的时候即为<code>![](github-hexo-blog/1.jpg)</code>;</li>
<li>最后主题样式替换路径：<code>/source/css/_partial/highlight.styl</code></li>
</ul>
</li>
</ol>
</blockquote>
<h3 id="最后访问"><a href="#最后访问" class="headerlink" title="最后访问"></a>最后访问</h3><p>个人主页：<a href="https://yxcui.github.io">https://yxcui.github.io</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h3&gt;&lt;p&gt;记录博客的地方的确很多，比如CSDN、博客园、简书和作业部落等，但是这些好像不易百度到或者想直接去找自己的资料，所以如果有一
    
    </summary>
    
    
      <category term="Github" scheme="http://yxcui.github.io/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Remove Invalid Parentheses</title>
    <link href="http://yxcui.github.io/2016/10/20/Remove-Invalid-Parentheses/"/>
    <id>http://yxcui.github.io/2016/10/20/Remove-Invalid-Parentheses/</id>
    <published>2016-10-20T09:12:44.000Z</published>
    <updated>2017-08-14T06:12:49.063Z</updated>
    
    <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a><strong>写在前面</strong></h3><p>今天跟儿时玩伴乐聊天了解到了<a href="https://leetcode.com/" target="_blank" rel="external">OJ(Online Judge)</a>，简单寒暄几句就是聊工作，本来还是他问我<a href="http://baike.baidu.com/link?url=xgSZX3a852uGeTzsOJr8rB6EX2oP4rO8C5KbqcNTXq-GHxnMoKEZrk5KmtS63g9QuJG6_0HlkOXwJS6h3o64ja" target="_blank" rel="external">GDAL</a>的，我也是第一次听说，待后续继续了解。从聊天中我收获的就是除了OJ之外，还有就是应该对自己平常的工作有一总结，不管有没有人看，都把它记录下来，一直就觉得这个习惯还是蛮重要的，知识不总结很快就容易遗忘，所以今晚开始（2016/10/20晚22:00）尽可能坚持这种习惯，并要将之前的工作和收获都记录下来，为工作也是为未来铺垫。</p>
<h3 id="Question"><a href="#Question" class="headerlink" title="Question"></a><strong>Question</strong></h3><pre><code>Remove the minimum number of invalid parentheses in order to make the input string valid. And return all possible results.
</code></pre><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a><strong>Examples</strong></h3><pre><code>&quot;()())()&quot; -&gt; [&quot;()()()&quot;, &quot;(())()&quot;]
&quot;(a)())()&quot; -&gt; [&quot;(a)()()&quot;, &quot;(a())()&quot;]
&quot;)(&quot; -&gt; [&quot;&quot;]
</code></pre><p><strong>Tag:</strong>     Depth-first Search、Breadth-first Search<br><strong>Similar Problem:</strong> <a href="https://leetcode.com/problems/valid-parentheses/" target="_blank" rel="external">Valid Parentheses</a></p>
<h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a><strong>Solution</strong></h3><p>From <a href="https://discuss.leetcode.com/topic/28833/short-python-bfs" target="_blank" rel="external">StefanPochmann</a>:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">remove_invalid_parentheses</span><span class="params">(s)</span>:</span></div><div class="line">    <span class="comment"># Once the count of ')' is more than '(' first appeared , the cycle will be exit instantly.</span></div><div class="line">    <span class="comment"># But if cycle over normally, the count of '(' is not less than ')'</span></div><div class="line">    <span class="comment"># To judge whether the 's' is valid</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isvalid</span><span class="params">(s)</span>:</span></div><div class="line">        ctr = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> s:</div><div class="line">            <span class="keyword">if</span> c == <span class="string">'('</span>:</div><div class="line">                ctr += <span class="number">1</span></div><div class="line">            <span class="keyword">elif</span> c == <span class="string">')'</span>:</div><div class="line">                ctr -= <span class="number">1</span></div><div class="line">                <span class="keyword">if</span> ctr &lt; <span class="number">0</span>:</div><div class="line">                    <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">        <span class="comment"># It contains a condition judgment that if ctr is 0 then returns True, or returns False.</span></div><div class="line">        <span class="keyword">return</span> ctr == <span class="number">0</span></div><div class="line"></div><div class="line">    <span class="comment"># Transforming 's' into a Set</span></div><div class="line">    level = &#123;s&#125;</div><div class="line">    i = <span class="number">0</span>   <span class="comment"># To store the cycle count</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        i = i + <span class="number">1</span></div><div class="line">        <span class="comment"># Calling function 'filter' and return a list containing valid results</span></div><div class="line">        valid = filter(isvalid, level)</div><div class="line">        <span class="keyword">if</span> valid:</div><div class="line">            <span class="keyword">print</span> i</div><div class="line">            <span class="keyword">return</span> valid   <span class="comment"># This is the only one exit of this function and return a valid result(List)</span></div><div class="line">        <span class="comment"># 'level' is used to store all possible assembly after removing one invalid parentheses.</span></div><div class="line">        level = &#123;s[:i] + s[i+<span class="number">1</span>:] <span class="keyword">for</span> s <span class="keyword">in</span> level <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s))&#125;</div><div class="line">        <span class="keyword">print</span> level</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    ss = <span class="string">"()()()"</span></div><div class="line">    <span class="comment"># It's used to accept valid results</span></div><div class="line">    valid = remove_invalid_parentheses(ss)</div><div class="line">    <span class="keyword">print</span> valid</div></pre></td></tr></table></figure></p>
<hr>
<p><strong>思路：</strong>首先需要写一个判断函数（isvalid），就是对每个括号组合都需要进行判断，只有在遍历每个括弧时，遍历过程中不能出现’)’的数量比’(‘的数量先多，若有此情况则跳出循环，无需再做后续判断；但是反之是可以的，且在此情况下一直遍历到最后一个括弧符号，当’(‘和’)’的数量相等，则一定是满足条件的括弧组合，也是<strong>唯一的条件</strong>，反之数量不等，即’(‘的数量比’)’的数量多，则也不满足条件。其次要完成移除一个字符，使用了列表生成式<em>s[:i] + s[i+1:] for s in level for i in range(len(s))</em>。最后就是循环对每个移除掉一个字符的括弧组合进行有效性检验，并且返回有效的组合。</p>
<p><strong>附：</strong></p>
<blockquote>
<ol>
<li>列表生成式的使用，能节省很多的循环的嵌套；</li>
<li>filter(function, sequence)函数的使用，返回的是满足函数条件的sequence中的元素，并以List/Tuple/string类型返回；</li>
<li>return ctr==0，该语句既实现了条件判断，也返回了值。</li>
</ol>
</blockquote>
<p><strong>后记：</strong>这个程序自己怎么都想不出来，还是看了别人的代码，然后自己一点一点理解，到今天（10.31日晚）才吃透。看来想学习算法，上来就啃难的不适合我这种智商不够的。<br>自己的理解都写在注释里，感觉蛮凌乱的，后面学习过程中一定要注意注释也要简介，否则篇幅过长也影响程序整体的简洁。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;&lt;strong&gt;写在前面&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;今天跟儿时玩伴乐聊天了解到了&lt;a href=&quot;https://leetcode.com/&quot;
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://yxcui.github.io/tags/LeetCode/"/>
    
  </entry>
  
</feed>
